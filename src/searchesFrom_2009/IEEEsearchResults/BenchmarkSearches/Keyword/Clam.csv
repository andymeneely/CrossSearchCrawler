http://ieeexplore.ieee.org/search/searchresult.jsp?download-format=download-csv&bulkSetSize=2000&refinements%3D4291944822%2C4291944246%26ranges%3D2009_2016_p_Publication_Year%26matchBoolean%3Dtrue%26searchField%3DSearch_All_Text%26queryText%3D%28%28%28%28.QT.Clam+Virus+Database.QT.%29+OR+.QT.Clam.QT.%29+OR+.QT.ClamAV.QT.%29+AND+.QT.Intrusion+Detection+System.QT.%29,11/9/2015 16:29,"((((""Clam Virus Database"") OR ""Clam"") OR ""ClamAV"") AND ""Intrusion Detection System"")",IEEE,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Title,Authors,Author Affiliations,Publication Title,Date Added To Xplore,Year,Volume,Issue,Start Page,End Page,Abstract,ISSN,ISBN,EISBN,DOI,PDF Link,Author Keywords,IEEE Terms,INSPEC Controlled Terms,INSPEC Non-Controlled Terms,MeSH Terms,Article Citation Count,Patent Citation Count,Reference Count,Copyright Year,Online Date,Issue Date,Meeting Date,Publisher,Document Identifier
A Bray-Curtis Weighted Automaton for Detecting Malicious Code Through System-Call Analysis,"Pungila, C.","Comput. Sci. Dept., West Univ. of Timisoara, Timisoara, Romania","Symbolic and Numeric Algorithms for Scientific Computing (SYNASC), 2009 11th International Symposium on",20100506,2009,,,392,400,"Malicious code detection is one of the top subjects of interest for intrusion detection systems in today's computer security research areas. In this paper we propose a new heuristic method for detecting malicious code through system call matching, which also takes in consideration the time of the system call, by using an adaptive search for an extended Aho-Corasick automaton supporting a subset of the regular expressions language, through the use of a normalization technique known as the Bray-Curtis (Sorensen) distance. We will also discuss how this technique can be applied to enrich the set of existing rules from the knowledge base for improving the detection rate.",,978-1-4244-5910-0,978-1-4244-5911-7,10.1109/SYNASC.2009.41,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5460823,Aho-Corasick automata;Bray-Curtis distance;Sorensen distance;dynamic analysis;intrusion detection system;malicious code detection;normalization;static analysis;system call timing,Algorithm design and analysis;Automata;Computer science;Informatics;Intrusion detection;Mathematics;Pattern analysis;Performance analysis;Scientific computing;Viruses (medical),automata theory;formal languages;security of data,Aho-Corasick automaton;Bray-Curtis distance;Bray-Curtis weighted automaton;Sorensen distance;computer security;detection rate;intrusion detection;knowledge base;malicious code detection;normalization technique;regular expression language;system call matching;system call time;system-call analysis,,1,,23,,,26-29 Sept. 2009,,IEEE,IEEE Conference Publications
Scalable multi-pipeline architecture for high performance multi-pattern string matching,"Weirong Jiang; Yang, Y.E.; Prasanna, V.K.","Ming Hsieh Dept. of Electr. Eng., Univ. of Southern California, Los Angeles, CA, USA","Parallel & Distributed Processing (IPDPS), 2010 IEEE International Symposium on",20100524,2010,,,1,12,"Multi-pattern string matching remains a major performance bottleneck in network intrusion detection and anti-virus systems for high-speed deep packet inspection (DPI). Although Aho-Corasick deterministic finite automaton (AC-DFA) based solutions produce deterministic throughput and are widely used in today's DPI systems such as Snort [1] and ClamAV [2], the high memory requirement of AC-DFA (due to the large number of state transitions in AC-DFA) inhibits efficient hardware implementation to achieve high performance. Some recent work [3], [4] has shown that the AC-DFA can be reduced to a character trie that contains only the forward transitions by incorporating pipelined processing. But they have limitations in either handling long patterns or extensions to support multi-character input per clock cycle to achieve high throughput. This paper generalizes the problem and proves formally that a linear pipeline with H stages can remove all cross transitions to the top H levels of a AC-DFA. A novel and scalable pipeline architecture for memory-efficient multi-pattern string matching is then presented. The architecture can be easily extended to support multi-character input per clock cycle by mapping a compressed AC-DFA [5] onto multiple pipelines. Simulation using Snort and ClamAV pattern sets shows that a 8-stage pipeline can remove more than 99% of the transitions in the original AC-DFA. The implementation on a state-of-the-art field programmable gate array (FPGA) shows that our architecture can store on a single FPGA device the full set of string patterns from the latest Snort rule set. Our FPGA implementation sustains 10+ Gbps throughput, while consuming a small amount of on-chip logic resources. Also desirable scalability is achieved: the increase in resource requirement of our solution is sub-linear with the throughput improvement.",1530-2075,978-1-4244-6442-5,,10.1109/IPDPS.2010.5470374,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5470374,DFA;Deep packet inspection;FPGA;pipeline;string matching,Automata;Clocks;Field programmable gate arrays;Hardware;Inspection;Intrusion detection;Memory architecture;Pipelines;Programmable logic arrays;Throughput,field programmable gate arrays;finite automata;pipeline processing;security of data;string matching,Aho-Corasick deterministic finite automaton;ClamAV;Snort;anti-virus systems;field programmable gate array;high performance multipattern string matching;high-speed deep packet inspection;linear pipeline;memory-efficient multipattern string matching;multicharacter input;network intrusion detection;pipelined processing;scalable multipipeline architecture;scalable pipeline architecture,,2,,21,,,19-23 April 2010,,IEEE,IEEE Conference Publications
The Parallel Sieve Method for a Virus Scanning Engine,"Nakahara, H.; Sasao, T.; Matsuura, M.; Kawamura, Y.","Kyushu Inst. of Technol., Japan","Digital System Design, Architectures, Methods and Tools, 2009. DSD '09. 12th Euromicro Conference on",20091208,2009,,,809,816,"This paper shows a new architecture for a virus scanning system, which is different from that of an intrusion detection system. The proposed method uses two-stage matching: In the first stage, a hardware filter quickly scans the text to find partial matches, and in the second stage, the MPU scans the text to find a total match in the ClamAV 514,287 virus pattern set. To make the hardware filter simple, we use a finite-input memory machine (FIMM). To reduce the memory size of the FIMM, we introduce the parallel sieve method. The proposed method is memorybased, so it is quickly reconfigurable and dissipates lower power than a TCAM-based method. The system is implemented on the Stratix III FPGA with three off-chip SRAMs and an SDRAM, where all ClamAV 514,287 virus patterns are stored. Compared with existing methods, our method achieves 1.41-31.36 times more efficient area-throughput ratio.",,978-0-7695-3782-5,,10.1109/DSD.2009.208,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5350088,FPGA;Network;Reconfigurable Architecture;Virus Scanning,Field programmable gate arrays;Filters;Hardware;Internet;Pattern matching;Physical layer;Power dissipation;Random access memory;Search engines;Throughput,DRAM chips;SRAM chips;computer viruses;field programmable gate arrays,SDRAM;Stratix III FPGA;TCAM-based method;finite-input memory machine;hardware filter;intrusion detection system;off-chip SRAM;parallel sieve method;two-stage matching;virus scanning engine,,3,,24,,,27-29 Aug. 2009,,IEEE,IEEE Conference Publications
Kangaroo: Accelerating String Matching by Running Multiple Collaborative Finite State Machines,Xiaofei Wang; Bin Liu; Junchen Jiang; Yang Xu; Yi Wang; Xiaojun Wang,"Tsinghua Univ., Beijing, China","Selected Areas in Communications, IEEE Journal on",20141127,2014,32,10,1784,1796,"String matching is a key technique for network security applications such as network intrusion detection systems and antivirus scanners, where the payload of every packet is inspected against thousands of patterns in real time. As the transmission rate of Internet links is getting higher and higher, the speed of matching engines is required to be faster and faster. Existing deterministic finite automaton (DFA)-based approaches achieve high throughput at the expense of extremely expensive memory cost; therefore, they are not suitable for the scenarios where only limited on-chip memory resources are available. To achieve fast matching speed while controlling memory expense, in this paper, we propose Kangaroo, a compact string matching scheme that scans multiple characters each time by running multiple small-sized finite state machines in parallel. Specifically, Kangaroo processes k consecutive characters mostly in one cycle by accessing k different memories in parallel, where k is a predefined factor that can be tuned based on the requirement of applications. Kangaroo is memory efficient. Experimental evaluations on Snort and ClamAV rule sets show that a tenfold increase in speed can be practically achieved by a single Kangaroo matching engine with a reduced memory cost comparing with the state-of-the-art DFA-based approaches.",0733-8716,,,10.1109/JSAC.2014.2358841,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6905731,Deep packet inspection;deterministic finite automaton;finite state machine,Automata;Buildings;Collaboration;Educational institutions;Engines;Silicon;Throughput,deterministic automata;finite state machines;string matching,ClamAV;DFA;Internet links;Kangaroo scheme;Snort;antivirus scanners;collaborative finite state machines;deterministic finite automaton;network intrusion detection system;on-chip memory resources;string matching,,1,,30,,9/19/2014,Oct. 2014,,IEEE,IEEE Journals & Magazines
NFA-Based Pattern Matching for Deep Packet Inspection,"Yan Sun; Valgenti, V.C.; Min Sik Kim","Sch. of Electr. & Comput. Eng., Washington State Univ., Pullman, WA, USA","Computer Communications and Networks (ICCCN), 2011 Proceedings of 20th International Conference on",20110829,2011,,,1,6,"Many network security applications in today's networks are based on deep packet inspection, checking not only the header portion but also the payload portion of a packet. For example, traffic monitoring, layer-7 filtering, and network intrusion detection all require an accurate analysis of packet content in search for predefined patterns to identify specific classes of applications, viruses, attack signatures, etc. Pattern matching is a major task in deep packet inspection. The two most common implementations of Pattern matching are based on Non-deterministic Finite Automata (NFAs) and Deterministic Finite Automata (DFAs), which take the payload of a packet as an input string. In this paper, we propose an efficient NFA-based pattern matching in Binary Content Addressable Memory(BCAM), which uses data search words consisting of 1s and 0s. Our approach can process multiple characters at a time using limited BCAM entries, which makes our approach scalable well. We evaluate our algorithm using patterns provided by Snort, a popular open-source intrusion detection system. The simulation results show that our approach outperforms existing CAM-based and software-based approaches.",1095-2055,978-1-4577-0637-0,,10.1109/ICCCN.2011.6006095,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6006095,,Automata;Clocks;Computer aided manufacturing;Computer architecture;Doped fiber amplifiers;Microprocessors;Pattern matching,computer network security;content-addressable storage;deterministic automata;finite automata;pattern matching,BCAM;NFA-based pattern matching;Snort;binary content addressable memory;data search word;deep packet inspection;network security;nondeterministic finite automata;open-source intrusion detection system,,2,1,28,,,July 31 2011-Aug. 4 2011,,IEEE,IEEE Conference Publications
The Cost Effective Pre-processing Based NFA Pattern Matching Architecture for NIDS,Yeim-Kuan Chang; Chen-Rong Chang; Cheng-Chien Su,"Dept. of Comput. Sci. & Inf. Eng., Nat. Cheng Kung Univ., Tainan, Taiwan","Advanced Information Networking and Applications (AINA), 2010 24th IEEE International Conference on",20100601,2010,,,385,391,"Network Intrusion Detection System (NIDS) is a system which can detect network attacks resulted from worms and viruses on the Internet. An efficient pattern matching algorithm plays an important role in NIDS. There have been many proposed methods for pattern matching algorithms. Traditionally, the multi-character NFA that is capable of matching multiple characters per cycle can be built by duplicating entire circuit of 1-character architecture. In this paper, we propose a pre-processing based architecture to improve the original multi-character architecture. The design of the proposed architecture and its implementation in FPGA are described in details. Our simulation results show that the proposed architecture performs better than all the existing Brute-Force based approaches in terms of the throughput and the slice utilization. Specifically, the proposed architectures of 2-character and 4-character designs can achieve the throughputs of 4.68 and 7.27 Gbps and the slice utilization of 2.86 and 2.10 in terms of char/slice, respectively.",1550-445X,978-1-4244-6695-5,,10.1109/AINA.2010.42,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5474723,Finite state machine;Intrusion detection;Multi-character;Pattern matching,Application software;Automata;Clocks;Computer architecture;Costs;Doped fiber amplifiers;Field programmable gate arrays;Intrusion detection;Pattern matching;Throughput,Internet;computer viruses;field programmable gate arrays;finite state machines;pattern matching,Brute-Force;FPGA;NFA pattern matching architecture;Network Intrusion Detection System;bit rate 4.68 Gbit/s to 7.27 Gbit/s;deterministic finite automata;field programmable gate array;finite state machines;network attacks detection;network intrusion detection system;original multicharacter architecture,,1,,16,,,20-23 April 2010,,IEEE,IEEE Conference Publications
StriD²FA: Scalable Regular Expression Matching for Deep Packet Inspection,Xiaofei Wang; Junchen Jiang; Yi Tang; Bin Liu; Xiaojun Wang,"Sch. of Electron. Eng., Dublin City Univ., Dublin, Ireland","Communications (ICC), 2011 IEEE International Conference on",20110728,2011,,,1,5,"Deep packet inspection (DPI) has become one of the key components of a Network Intrusion Detection System (NIDS) and it compares packet content to a set of rules written in regular expression. The need to keep up with ever-increasing line speed has forced NIDS designers to move to hardware or high-speed memory where memory resources are limited. In this paper, we present LBM, a novel accelerating scheme for regular expression matching which converts the original byte stream into much shorter integer stream and then matches it with a variant of DFA, called StriD<sup>2</sup>FA. In the instance of LBM that we realize, 10-15 speedup is reasonable while the memory is much smaller than traditional DFA.",1550-3607,978-1-61284-232-5,978-1-61284-231-8,10.1109/icc.2011.5963289,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5963289,,Acceleration;Converters;Doped fiber amplifiers;Inspection;Memory management;Throughput;Transforms,computer network security,deep packet inspection;network intrusion detection system;scalable regular expression matching,,0,,19,,,5-9 June 2011,,IEEE,IEEE Conference Publications
Skip Finite Automaton: A Content Scanning Engine to Secure Enterprise Networks,Junchen Jiang; Yi Tang; Bin Liu; Yang Xu; Xiaofei Wang,"Inst. for Theor. Comput. Sci., Tsinghua Univ., Beijing, China","Global Telecommunications Conference (GLOBECOM 2010), 2010 IEEE",20110110,2010,,,1,5,"Today's file sharing networks are creating potential security problems to enterprise networks, i.e., the leakage of confidential documents. In order to prevent such leakage, we propose the Data Leakage Prevention System (DLPS) which is applied at the entrance of the enterprise network to filter out the outgoing sensitive information. The DLPS is based on a content scanning engine which defines a new type of matching problem, called longest overlap matching which also exits in many other applications as a basic problem where contents are delivered by small blocks. We study the problem by comparing it with the traditional pattern matching problem in Deep Packet Inspection (DPI) of Network Intrusion Detection Systems (NIDS) whose solutions are based on finite automata. We develop a new finite automata representation called Skip-Finite Automata (Skip-FA) which detects the packets carrying sensitive information by using default transitions to implicitly track the overlapping parts between packets' payloads and sensitive files. The simulation results shows that our system achieves a matching speed of about 10B+ per memory access for small file set (>;20KB) and 100B+ per memory access for large file set (>;2500KB). We also find that the memory consumption of Skip-FA is almost the same to that of the original files.",1930-529X,978-1-4244-5636-9,978-1-4244-5637-6,10.1109/GLOCOM.2010.5683165,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5683165,,Automata;Delay;Engines;IEEE Communications Society;Logic gates;Payloads;Radiation detectors,finite automata;peer-to-peer computing;security of data;telecommunication security,content scanning engine;data leakage prevention system;deep packet inspection;file sharing network;finite automata representation;network intrusion detection system;pattern matching problem;secure enterprise network;skip finite automata;skip finite automaton,,1,,18,,,6-10 Dec. 2010,,IEEE,IEEE Conference Publications
A Memory-Efficient Bit-Split Parallel String Matching Using Pattern Dividing for Intrusion Detection Systems,Hyunjin Kim; Hong-Sik Kim; Sungho Kang,"Dept. of Electr. & Electron. Eng., Yonsei Univ., Seoul, South Korea","Parallel and Distributed Systems, IEEE Transactions on",20110926,2011,22,11,1904,1911,"For the low-cost hardware-based intrusion detection systems, this paper proposes a memory-efficient parallel string matching scheme. In order to reduce the number of state transitions, the finite state machine tiles in a string matcher adopt bit-level input symbols. Long target patterns are divided into subpatterns with a fixed length; deterministic finite automata are built with the subpatterns. Using the pattern dividing, the variety of target pattern lengths can be mitigated, so that memory usage in homogeneous string matchers can be efficient. In order to identify each original long pattern being divided, a two-stage sequential matching scheme is proposed for the successive matches with subpatterns. Experimental results show that total memory requirements decrease on average by 47.8 percent and 62.8 percent for Snort and ClamAV rule sets, in comparison with several existing bit-split string matching methods.",1045-9219,,,10.1109/TPDS.2011.85,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5733341,Computer network security;finite state machines;site security monitoring;string matching.,Doped fiber amplifiers;Intrusion detection;Memory management;Pattern matching;Throughput,computer network security;deterministic automata;finite state machines;string matching,bit-level input symbols;deterministic finite automata;finite state machine;hardware-based intrusion detection systems;memory-efficient bit-split parallel string matching scheme;pattern dividing;two-stage sequential matching scheme,,3,,15,,3/17/2011,Nov. 2011,,IEEE,IEEE Journals & Magazines
StriFA: Stride Finite Automata for High-Speed Regular Expression Matching in Network Intrusion Detection Systems,"Xiaofei Wang; Yang Xu; Junchen Jiang; Ormond, O.; Bin Liu; Xiaojun Wang","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","Systems Journal, IEEE",20130704,2013,7,3,374,384,"Deep packet inspection has become a key component in network intrusion detection systems (NIDSes), where every packet in the incoming data stream needs to be compared with patterns in an attack database, byte-by-byte, using either string matching or regular expression matching. Regular expression matching, despite its flexibility and efficiency in attack identification, brings significantly high computation and storage complexities to NIDSes, making line-rate packet processing a challenging task. In this paper, we present stride finite automata (StriFA), a novel finite automata family, to accelerate both string matching and regular expression matching. Different from conventional finite automata, which scan the entire traffic stream to locate malicious information, a StriFA only needs to scan a partial traffic stream to find suspicious information. The presented StriFA technique has been implemented in software and evaluated based on different traces. The simulation results show that the StriFA acceleration scheme offers an increased speed over traditional nondeterministic finite automaton/deterministic finite automaton, while at the same time reducing the memory requirement.",1932-8184,,,10.1109/JSYST.2013.2244791,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6475958,Deep packet inspection (DPI);deterministic finite automaton (DFA);network intrusion detection systems (NIDSes);nondeterministic finite automaton (NFA),Acceleration;Automata;Doped fiber amplifiers;Educational institutions;Engines;Memory management;Pattern matching,finite automata;security of data;string matching,NIDS;StriFA acceleration scheme;attack database;attack identification;data stream;high-speed regular expression matching;line-rate packet processing;malicious information;network intrusion detection systems;stride finite automata;string matching;traffic stream,,2,,31,,3/7/2013,Sept. 2013,,IEEE,IEEE Journals & Magazines
Robust and Scalable String Pattern Matching for Deep Packet Inspection on Multicore Processors,"Yang, Y.-H.E.; Prasanna, V.K.","Xilinx, Inc., San Jose, CA, USA","Parallel and Distributed Systems, IEEE Transactions on",20130927,2013,24,11,2283,2292,"Conventionally, dictionary-based string pattern matching (SPM) has been implemented as Aho-Corasick deterministic finite automaton (AC-DFA). Due to its large memory footprint, a large-dictionary AC-DFA can experience poor cache performance when matching against inputs with high match ratio on multicore processors. We propose a head-body finite automaton (HBFA), which implements SPM in two parts: a head DFA (H-DFA) and a body NFA (B-NFA). The H-DFA matches the dictionary up to a predefined prefix length in the same way as AC-DFA, but with a much smaller memory footprint. The B-NFA extends the matching to full dictionary lengths in a compact variable-stride branch data structure, accelerated by single-instruction multiple-data (SIMD) operations. A branch grafting mechanism is proposed to opportunistically advance the state of the H-DFA with the matching progress in the B-NFA. Compared with a fully populated AC-DFA, our HBFA prototype has <;1/5 construction time, requires <;1/20 runtime memory, and achieves 3x to 8x throughput when matching real-life large dictionaries against inputs with high match ratios. The throughput scales up 27x to over 34 Gbps on a 32-core Intel Manycore Testing Lab machine based on the Intel Xeon X7560 processors.",1045-9219,,,10.1109/TPDS.2012.217,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6247434,DFA;NFA;SIMD;String matching;deep packet inspection;multicore platform;variable-stride tree,Automata;Data structures;Dictionaries;Doped fiber amplifiers;Impedance matching;Throughput;Vegetation,cache storage;computer network security;data structures;finite automata;multiprocessing systems;string matching,32-core Intel Manycore Testing Lab machine;B-NFA;H-DFA;HBFA prototype;Intel Xeon X7560 processors;SIMD operations;body NFA;branch grafting mechanism;deep packet inspection;head DFA;head-body finite automaton;multicore processors;prefix length;real-life large dictionary matching;robust string pattern matching;scalable string pattern matching;single-instruction multiple-data operations;variable-stride branch data structure,,0,,14,,7/23/2012,Nov. 2013,,IEEE,IEEE Journals & Magazines
Malware Detection and Kernel Rootkit Prevention in Cloud Computing Environments,"Schmidt, M.; Baumgartner, L.; Graubner, P.; Bock, D.; Freisleben, B.","Dept. of Math. & Comput. Sci., Univ. of Marburg, Marburg, Germany","Parallel, Distributed and Network-Based Processing (PDP), 2011 19th Euromicro International Conference on",20110324,2011,,,603,610,"The commercial success of Cloud Computing and recent developments in Grid Computing have brought platform virtualization technology into the field of high performance computing. Virtualization offers both more flexibility and security through custom user images and user isolation. In this paper, we present an approach for combined malware detection and kernel root kit prevention in virtualized Cloud Computing environments. All running binaries in a virtual instance are intercepted and submitted to one or more analysis engines. Besides a complete check against a signature database, live introspection of all system calls is performed to detect yet unknown exploits or malware. Furthermore, to prevent that an intruder retains persistent control over a running instance after a successful compromise, an in-kernel root kit prevention approach is proposed. Only authorized and thus trusted kernel modules are allowed to be loaded during runtime, loading of unauthorized modules is no longer possible. Finally, the performance of the presented solutions is evaluated.",1066-6192,978-1-4244-9682-2,,10.1109/PDP.2011.45,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5739055,Kernel Security;Malware detection;Rootkit;Virtualization,Cloud computing;Kernel;Loading;Malware,cloud computing;grid computing;invasive software;virtualisation,cloud computing;grid computing;kernel rootkit prevention;malware detection;virtualization,,1,1,14,,,9-11 Feb. 2011,,IEEE,IEEE Conference Publications
A Low-Energy Variation-Tolerant Asynchronous TCAM for Network Intrusion Detection Systems,"Onizawa, N.; Gross, W.J.; Hanyu, T.","Dept. of Electr. & Comput. Eng., McGill Univ., Montreal, QC, Canada","Asynchronous Circuits and Systems (ASYNC), 2013 IEEE 19th International Symposium on",20130624,2013,,,8,15,"This paper introduces a low-energy variation-tolerant asynchronous ternary content-addressable memory (TCAM) for Network Intrusion Detection Systems (NIDS). The proposed special-purpose TCAM can detect packet payloads as ""virus free"" by inspecting only a few bytes. Hence, it adaptively cancels unnecessary searches, leading to greatly reduction in the search delay time and energy dissipation. For timing robustness with low area overhead, a word circuit that stores a virus pattern is designed based on both a quasi-delay insensitive (QDI) and a bundled-data techniques. The QDI word circuit is realized by combining complementary word circuits for only a small portion of the TCAM that is sensitive to delay variations. For performance evaluation, a probability of the virus detection is calculated using a set of real packet traces from MIT DARPA. A 2048 × 128-byte asynchronous TCAM is designed using TSMC 65nm CMOS technology. The energy dissipation is 93.1% lower and the cycle time is 52.4% lower than those of a deep-pipelined synchronous TCAM with a comparable area. It is also demonstrated that the proposed TCAM tolerates up to 47% variations (3s) of threshold voltages.",1522-8681,978-1-4673-5956-6,,10.1109/ASYNC.2013.16,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6546172,,,CMOS integrated circuits;content-addressable storage;delays;security of data,NIDS;QDI word circuit;TSMC CMOS technology;bundled-data techniques;deep-pipelined synchronous TCAM;delay variations;energy dissipation;low-energy variation-tolerant asynchronous TCAM;network intrusion detection systems;packet payload detection;packet traces;search delay time;size 65 nm;ternary content-addressable memory;virus detection probability,,3,,28,,,19-22 May 2013,,IEEE,IEEE Conference Publications
A high effective papilionaceous automata to match multiple counting constraint pattern,Zhao Rong-cai; Zhang Shuo; Liu Peng; Zhou Li,"Dept. of Comput. & Sci., China Nat. Digital Switching Syst. Center (NDSC), Zhengzhou, China","Communication Software and Networks (ICCSN), 2011 IEEE 3rd International Conference on",20110908,2011,,,21,24,"Regular expression matching is a key technology of network security. Around this issue, one of the regular expression patterns in real rule sets called counting constraint pattern is analyzed in this paper. Besides, the complex characteristics of counting constrain pattern syntax and the problems of state explosion lead by patterns composition are studied. Based on the analysis of the limitations of existing matching algorithms, aimed at the multiple counting constraint pattern composition, a papilionaceous automata applied to deep packet inspection is proposed. The results show that the compression ratio could reach 94.86% in Linux L7-filter rule sets, and for the majority of Bro rule sets and Snort rule sets, the compression ratio could up to 99%.",,978-1-61284-485-5,,10.1109/ICCSN.2011.6014209,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6014209,Counting Constraint Pattern;Deep Packet Inspection;Regular Expression;State Explosion,Doped fiber amplifiers;Explosions;Fires;Matched filters;Pattern matching;Security,automata theory;computer network security;knowledge engineering;pattern matching,Bro rule sets;Linux L7-filter rule sets;Snort rule sets;constrain pattern syntax;deep packet inspection;existing matching algorithms;multiple counting constraint pattern composition;network security;papilionaceous automata;patterns composition;real rule sets;regular expression matching;regular expression patterns;state explosion,,0,,18,,,27-29 May 2011,,IEEE,IEEE Conference Publications
Space-time tradeoff in regular expression matching with semi-deterministic finite automata,"Yang, Y.E.; Prasanna, V.K.","Ming Hsieh Dept. of Electr. Eng., Univ. of Southern California, Los Angeles, CA, USA","INFOCOM, 2011 Proceedings IEEE",20110630,2011,,,1853,1861,"Regular expression matching (REM) with nondeterministic finite automata (NFA) can be computationally expensive when a large number of patterns are matched concurrently. On the other hand, converting the NFA to a deterministic finite automaton (DFA) can cause state explosion, where the number of states and transitions in the DFA are exponentially larger than in the NFA. In this paper, we seek to answer the following question: to match an arbitrary set of regular expressions, is there a finite automaton that lies between the NFA and DFA in terms of computation and memory complexities? We introduce the semi-deterministic finite automata (SFA) and the state convolvement test to construct an SFA from a given NFA. An SFA consists of a fixed number (p) of constituent DFAs (c-DFA) running in parallel; each c-DFA is responsible for a subset of states in the original NFA. To match a set of regular expressions with n overlapping symbols (that can match to the same input character concurrently), the NFA can require O(n) computation per input character, whereas the DFA can have a state transition table with O(2<sup>n</sup>) states. By exploiting the state convolvements during the SFA construction, an equivalent SFA reduces the computation complexity to O(p<sup>2</sup>=c<sup>2</sup>) per input character while limiting the space requirement to O(|Σ|×p<sup>2</sup>×(n=p)<sup>c</sup>) states, where Σ is the alphabet and c ≥ 1 is a small design constant. Although the problem of constructing the optimal (minimum-sized) SFA is shown to be NP-complete, we develop a greedy heuristic to quickly construct a near-optimal SFA in time and space quadratic in the number of states in the original NFA. We demonstrate our SFA construction using real-world regular expressions taken from the Snort IDS.",0743-166X,978-1-4244-9919-9,,10.1109/INFCOM.2011.5934986,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5934986,Aho-Corasick algorithm;DFA;NFA;Regular expression;deep packet inspection;graph coloring;space-time tradeoff;state explosion,Automata;Complexity theory;Computer architecture;Doped fiber amplifiers;Explosions;Pattern matching;Throughput,computational complexity;deterministic automata;finite automata;greedy algorithms;pattern matching,NP-complete problem;computation complexity;deterministic finite automaton;greedy heuristic;memory complexity;nondeterministic finite automata;regular expression matching;semi-deterministic finite automata;space-time tradeoff;state explosion,,11,,26,,,10-15 April 2011,,IEEE,IEEE Conference Publications
Matching a Set of Patterns with Wildcards,Meng Zhang; Yi Zhang; Jijun Tang,"Coll. of Comput. Sci. & Technol., Jilin Univ., Changchun, China","Parallel Architectures, Algorithms and Programming (PAAP), 2010 Third International Symposium on",20110217,2010,,,169,174,"Multi-pattern matching with wildcards is to find all the occurrences of a set of patterns with wildcards in a text. This problem arises in various fields, such as computational biology and network security. But the problem is not extensively studied as the single pattern case and there is no efficient algorithm for this problem. In this paper, we present efficient algorithms based on fast Fourier transforms. Let P = {p<sub>1</sub>, . . . , p<sub>k</sub>} be a set of patterns with wildcards where the total length of patterns is |P|, and a text t of length n over alphabet a1 , . . . ,a<sub>σ</sub>. We present two algorithms for this problem where patterns are matched simultaneously. The first algorithm finds the matches of a small set of patterns in the text in O(n log |P| + nk) time. The words used in the algorithm are of size k[2 lg σ] + X<sub>i=1</sub><sup>k</sup> ⌈Ig |p<sub>i</sub>|⌉ bits. The second one finds the matchings of patterns in the text in time O(n log |P| log σ + nk) by computing the Hamming distance between the patterns and the text. The algorithm uses the words with X<sub>i=1</sub><sup>k</sup> ⌈lg |p<sub>i</sub>| bits. We also demonstrate an FFT implementation based on the modular arithmetic for machines with word size of 64 bits. Finally, we show that both algorithms can be easily parallelized and the parallelized algorithms are given as well.",,978-1-4244-9482-8,,10.1109/PAAP.2010.70,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5715080,Algorithm;FFT;Multi-pattern matching;Wildcards,Arrays;Computer science;Convolution;Electronic mail;Hamming distance;Pattern matching;Program processors,Hamming codes;fast Fourier transforms;set theory;string matching;text analysis,Hamming distance;fast Fourier transform;pattern matching;set of pattern;wildcard,,0,,13,,,18-20 Dec. 2010,,IEEE,IEEE Conference Publications
Network intrusion detection system using J48 Decision Tree,"Sahu, S.; Mehtre, B.M.","Sch. of Comput. & Inf. Sci., Univ. of Hyderabad, Hyderabad, India","Advances in Computing, Communications and Informatics (ICACCI), 2015 International Conference on",20150928,2015,,,2023,2026,"As the number of cyber attacks have increased, detecting the intrusion in networks become a very tough job. For network intrusion detection system (NIDS), many data mining and machine learning techniques are used. However, for evaluation, most of the researchers used KDD Cup 99 data set, which has widely criticized for not showing current network situation. In this paper we used a new labelled network dataset, called Kyoto 2006+ dataset. In Kyoto 2006+ data set, every instant is labelled as normal (no attack), attack (known attack) and unknown attack. We use Decision Tree (J48) algorithm to classify the network packet that can be used for NIDS. For training and testing we used 134665 network instances. The generated rules works with 97.2% correctness for detecting the connection i.e., no attack, known attack or unknown attack.",,978-1-4799-8790-0,,10.1109/ICACCI.2015.7275914,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7275914,Data Mining;Decision tree;Intrusion Detection System;J48 algorithm;Kyoto data set,Accuracy;Data mining;Decision trees;Feature extraction;Intrusion detection;Machine learning algorithms;Support vector machines,decision trees;learning (artificial intelligence);pattern classification;security of data,J48 decision tree algorithm;KDD Cup 99 dataset;Kyoto 2006+ dataset;cyber attacks;data mining technique;machine learning technique;network intrusion detection system;network packet classification,,,,,,,10-13 Aug. 2015,,IEEE,IEEE Conference Publications
A survey on Finite Automata based pattern matching techniques for network Intrusion Detection System (NIDS),"Rathod, P.M.; Marathe, N.; Vidhate, A.V.","Dept. of Comput. Eng., Ramrao Adik Inst. of Technol., Navi Mumbai, India","Advances in Electronics, Computers and Communications (ICAECC), 2014 International Conference on",20150108,2014,,,1,5,"Many network security applications such as Intrusion Detection System (IDS), Firewall and Data Loss Prevention System (DLPS) are based on deep packet inspection, in this packets header as well as payload of the packets are checked with predefined attack signature to identify whether it contains malicious traffic or not. To perform this checking different pattern matching methods are used by NIDS. The most popular method to implement pattern matching is to use of Finite Automata (FA). Generally, regular expressions are used to represent most of the attack signatures defined by NIDS. They are implemented using finite automata, which takes the payload of packet as input string. However, existing approaches of Finite Automata (FA), both deterministic finite automata (DFA) and non-deterministic finite automata (NFA) for pattern matching are having their own advantages and some drawbacks. The DFA based pattern matching methods are fast enough but require more memory. However, NFA based pattern matching methods are comparatively takes less memory but the speed of matching is very slow, to overcome these drawbacks of finite automata there are many approaches have been proposed. This paper discuses comparative study of some Finite Automata (FA) based techniques for pattern matching in network intrusion detection system (NIDS).",,,,10.1109/ICAECC.2014.7002456,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7002456,Finite Automata;NIDS and DLPS;Regular Expression Matching,Application specific integrated circuits;Automata;Field programmable gate arrays;Intrusion detection;Memory management;Merging;Pattern matching,computer network security;finite automata;pattern matching;telecommunication traffic,DLPS;FA;NIDS;attack signatures;data loss prevention system;deep packet inspection;finite automata based pattern matching techniques;firewall;malicious traffic;network intrusion detection system;network security applications;packets header;packets payload;regular expression matching,,0,,10,,,10-11 Oct. 2014,,IEEE,IEEE Conference Publications
A cloud-based intrusion detection system for Android smartphones,"Khune, R.S.; Thangakumar, J.","Dept. of Comput. Sci. & Eng., Hindustan Univ., Chennai, India","Radar, Communication and Computing (ICRCC), 2012 International Conference on",20130207,2012,,,180,184,"Cloud computing is primarily being use for eliminating the need of local information resources. The ability of cloud provides vast range of services on web. As Smartphone usage has been continuously increasing in recent years, but due to its complexity and functionality, they are also vulnerable to the attacks such as virus, Trojans and worms. The smart phones have limited storage, processing and computational power to execute highly complex algorithms for intrusion detection and implementing signature based attack detection. In this paper, we propose a cloud based intrusion detection and recovery system for Android smart mobile phones that provides continuous in-depth forensic analysis to detect any misbehaviour in network. The mechanism performs analysis on the virtualized and synchronized replica of an actual device in the cloud environment. The analysis on the emulated device includes running multiple detection engines in parallel, memory scanners and system call anomaly detection that generate responses in event of attack. The responses are instructs to mobile agent installed on the device to take essential actions and perform recovery of device if needed.",,978-1-4673-2756-5,,10.1109/ICRCC.2012.6450572,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6450572,Android Smartphone;Cloud Computing;Intrusion Detection,Cloud computing;Intrusion detection;Mobile communication;Smart phones,cloud computing;computer viruses;digital forensics;digital signatures;mobile agents;mobile computing;smart phones,Android smart mobile phones;Trojan;cloud based intrusion recovery system;cloud computing;cloud-based intrusion detection system;continuous in-depth forensic analysis;local information resource need elimination;memory scanners;mobile agent;multiple detection engines;signature based attack detection;system call anomaly detection;virus;worms,,2,,17,,,21-22 Dec. 2012,,IEEE,IEEE Conference Publications
CompactDFA: Scalable Pattern Matching Using Longest Prefix Match Solutions,"Bremler-Barr, A.; Hay, D.; Koral, Y.","Dept. of Comput. Sci., Interdiscipl. Center, Herzliya, Israel","Networking, IEEE/ACM Transactions on",20140417,2014,22,2,415,428,"A central component in all contemporary intrusion detection systems (IDSs) is their pattern matching algorithms, which are often based on constructing and traversing a deterministic finite automaton (DFA) that represents the patterns. While this approach ensures deterministic time guarantees, modern IDSs need to deal with hundreds of patterns, thus requiring to store very large DFAs, which usually do not fit in fast memory. This results in a major bottleneck on the throughput of the IDS, as well as its power consumption and cost. We propose a novel method to compress DFAs by observing that the name used by common DFA encoding is meaningless. While regular DFAs store separately each transition between two states, we use this degree of freedom and encode states in such a way that all transitions to a specific state are represented by a single prefix that defines a set of current states. Our technique applies to a large class of automata, which can be categorized by simple properties. Then, the problem of pattern matching is reduced to the well-studied problem of Longest Prefix Match (LPM), which can be solved either in ternary content-addressable memory (TCAM), in commercially available IP-lookup chips, or in software. Specifically, we show that with a TCAM our scheme can reach a throughput of 10 Gb/s with low power consumption.",1063-6692,,,10.1109/TNET.2013.2253119,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6494357,Aho–Corasick (AC);IP lookup;deep packet inspection;network intrusion detection system (NIDS);pattern matching;ternary content-addressable memory (TCAM),,IP networks;encoding;energy consumption;pattern matching;security of data,DFA encoding;IDS;IP-lookup chips;LPM;TCAM;contemporary intrusion detection systems;degree of freedom;deterministic finite automaton;longest prefix match solutions;power consumption;scalable pattern matching algorithms;ternary content-addressable memory,,1,,34,,4/4/2013,Apr-14,,IEEE,IEEE Journals & Magazines
An Efficient TCAM-Based Implementation of Multipattern Matching Using Covered State Encoding,SangKyun Yun,"Dept. of Comput. & Telecommun. Eng., Yonsei Univ., Wonju, South Korea","Computers, IEEE Transactions on",20111229,2012,61,2,213,221,"This paper proposes a state encoding scheme called a covered state encoding for the efficient TCAM-based implementation of the Aho-Corasick multipattern matching algorithm, which is widely used in network intrusion detection systems. Since the information of failure transitions of the Aho-Corasick Nondeterministic Finite Automata (NFA) is implicitly captured in the covered state encoding and the failure transition entries can be completely eliminated, the Aho-Corasick NFA can be implemented on a TCAM with smaller number of entries than other schemes. We also propose constructing the modified Aho-Corasick NFA for multicharacter processing, which can be implemented on a TCAM using the covered state encoding. The implementation of modified Aho-Corasick NFA using the covered state encoding is also superior to other schemes in both TCAM memory requirement and lookup speed.",0018-9340,,,10.1109/TC.2010.273,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5669295,Aho-Corasick algorithm.;String matching;TCAM;intrusion detection system;multipattern matching,Automata;Doped fiber amplifiers;Encoding;Impedance matching;Memory management;Pattern matching;Random access memory,computer network reliability;computer network security;finite automata;pattern matching,Aho-Corasick multipattern matching algorithm;Aho-Corasick nondeterministic finite automata;TCAM memory requirement;TCAM-based implementation;covered state encoding scheme;failure transition entry;failure transition information;lookup speed;modified Aho-Corasick NFA;multicharacter processing;network intrusion detection system,,2,,19,,12/17/2010,Feb. 2012,,IEEE,IEEE Journals & Magazines
Speeding up pattern matching by optimal partial string extraction,Tan Jianlong; Liu Xia; Liu Yanbing; Liu Ping,"Inst. of Comput. Technol., Chinese Acad. of Sci., Beijing, China","Computer Communications Workshops (INFOCOM WKSHPS), 2011 IEEE Conference on",20110623,2011,,,1030,1035,"String matching plays a key role in web content monitoring systems. Suffix matching algorithms have good time efficiency, and thus are widely used. These algorithms require that all patterns in a set have the same length. When the patterns cannot satisfy this requirement, the leftmost characters, m being the length of the shortest pattern, are extracted to construct the data structure. We call such m-character strings partial strings. However, a simple extraction from the left does not address the impact of partial string locations on search speed. We propose a novel method to extract the partial strings from each pattern which maximizes search speed. More specifically, with this method we can compute all the corresponding searching time cost by theoretical derivation, and choose the location which yields an approximately minimal search time. We evaluate our method on two rule sets: Snort and ClamAV. Experiments show that in most cases, our method achieves the fastest searching speed in all possible locations of partial string extraction, and is about 5%-20% faster than the alternative methods.",,978-1-4577-0249-5,978-1-4577-0248-8,10.1109/INFCOMW.2011.5928778,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5928778,SBOM algorithm;Wu Manber algorithm;multiple string matching;pattern matching;string matching,Algorithm design and analysis;Automata;Bills of materials;Data mining;Data structures;Pattern matching;Training,Internet;feature extraction;string matching,ClamAV;Internet;Snort;Web content monitoring system;optimal partial string extraction;pattern matching;searching time cost;string matching;suffix matching algorithm,,1,,11,,,10-15 April 2011,,IEEE,IEEE Conference Publications
SCAMPI: a scalable CAM-based algorithm for multiple pattern inspection,"Petrini, F.; Agarwal, V.; Pasetto, D.","IBM T.J. Watson Res., Yorktown Heights, NY, USA","High Performance Computing Networking, Storage and Analysis, Proceedings of the Conference on",20130314,2009,,,1,11,"String matching is one of the most compute intensive steps in a network intrusion detection system. The growing network rates, rapidly approaching 10 Gbits/sec, and the large number of signatures that need to be scanned concurrently pose very demanding challenges to algorithmic design and practical implementation. In this paper we present SCAMPI, a ground-breaking string searching algorithm that is fast, space-efficient, scalable and resilient to attacks. SCAMPI is designed with a memory-centric model of complexity in mind, to minimize memory traffic and enhance data reuse with a careful compile-time data layout. The experimental evaluation executed on two families of multicore processors, Cell B.E and Intel Xeon E5472, shows that it is possible to obtain a processing rate of more than 2 Gbits/sec per core with very large dictionaries and heavy hitting rates. In the largest tested configuration, SCAMPI reaches 16 Gbits/sec on 8 Xeon cores, reaching, and in some cases exceeding, the performance of special-purpose processors and FPGA. Using SCAMPI we have been able to scan an input stream using a dictionary of 3.5 millions keywords, more than an order of magnitude larger than any published result in the literature and in commercial prototypes, at a rate of more than 1.2 Gbits/sec per processing core.",,,,10.1145/1654059.1654106,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6375524,,,multiprocessing systems;program compilers;security of data;string matching,Cell BE;Intel Xeon E5472;SCAMPI;Xeon core;algorithmic design;compile-time data layout;data reuse;dictionary;ground-breaking string searching algorithm;hitting rate;memory traffic;memory-centric model;multicore processor;network intrusion detection system;network rate;pattern inspection;processing rate;scalable CAM-based algorithm;string matching,,1,,23,,,14-20 Nov. 2009,,IEEE,IEEE Conference Publications
An Approach for Unifying Rule Based Deep Packet Inspection,"Munoz, A.; Sezer, S.; Burns, D.; Douglas, G.","Centre for Secure Inf. Technol. (CSIT), Queen''s Univ. of Belfast, Belfast, UK","Communications (ICC), 2011 IEEE International Conference on",20110728,2011,,,1,5,"High performance Internet traffic inspection and layer-7 content analysis have become essential functions of high speed networks. Over the past decade several DPI systems have evolved targeting specific issues related to traffic management, user/application policing, intrusion detection/prevention, URL/malicious/unwanted content filtering. Snort, OpenDPI, Bro, L7-filter, ClamAV are a number of open-source tools based on custom DPI engines and custom rule-sets. The surging demand for higher bandwidth DPI systems capable of supporting larger rule-sets requires the use of hardware acceleration and hardware-based systems. In comparison to software based systems, the design and development of custom purpose hardware for DPI is expensive. The need for DPI solutions for a range of applications at high speed requires a unified processing platform. This paper presents the research in converting known DPI rule-sets into a meta format based on regular expressions, that can be executed by software and hardware-based processing platforms. To demonstrate this work a Snort2Regex translator has been developed to transform Snort rules into regular expressions using not only the content of the Snort rule but every relevant element that belongs to it and could increase the accuracy of the analysis.",1550-3607,978-1-61284-232-5,978-1-61284-231-8,10.1109/icc.2011.5963095,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5963095,,Hardware;IP networks;Internet;Intrusion detection;Payloads;Protocols;Syntactics,Internet;computer network management;computer network security;inspection;public domain software;telecommunication traffic,Bro;ClamAV;Internet traffic inspection;L7-filter;OpenDPI;Snort2Regex translator;URL content filtering;application policing;hardware acceleration;hardware-based processing platform;hardware-based system;high speed network;intrusion detection;intrusion prevention;layer-7 content analysis;malicious content filtering;meta format;open-source tools;rule based deep packet inspection;software-based processing platform;traffic management;unwanted content filtering;user policing,,2,,12,,,5-9 June 2011,,IEEE,IEEE Conference Publications
A Multi-dimensional Progressive Perfect Hashing for High-Speed String Matching,"Yang Xu; Lei Ma; Zhaobo Liu; Chao, H.J.","ECE Dept., NYU, Brooklyn, NY, USA","Architectures for Networking and Communications Systems (ANCS), 2011 Seventh ACM/IEEE Symposium on",20111031,2011,,,167,177,"Aho-Corasick (AC) automaton is widely used for multi-string matching in today's Network Intrusion Detection System (NIDS). With fast-growing rule sets, implementing AC automaton with a small memory without sacrificing its performance has remained challenging in NIDS design. In this paper, we propose a multi-dimensional progressive perfect hashing algorithm named P<sup>2</sup>-Hashing, which allows transitions of an AC automaton to be placed in a compact hash table without any collision. P<sup>2</sup>-Hashing is based on the observation that a hash key of each transition consists of two dimensions, namely a source state ID and an input character. When placing a transition in a hash table and causing a collision, we can change the value of a dimension of the hash key to rehash the transition to a new location of the hash table. For a given AC automaton, P<sup>2</sup>-Hashing first divides all the transitions into many small sets based on the two-dimensional values of the hash keys, and then places the sets of transitions progressively into the hash table until all are placed. Hash collisions that occurred during the insertion of a transition will only affect the transitions in the same set. The proposed P<sup>2</sup>-Hashing has many unique properties, including fast hash index generation and zero memory overhead, which are very suitable for the AC automaton operation. The feasibility and performance of P<sup>2</sup>-Hashing are investigated through simulations on the full Snort (6.4k rules) and Clam AV (54k rules) rule sets, each of which is first converted to a single AC automaton. Simulation results show that P<sup>2</sup>-Hashing can successfully construct the perfect hash table even when the load factor of the hash table is as high as 0.91.",,978-1-4577-1454-2,978-0-7695-4521-9,10.1109/ANCS.2011.33,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6062729,Aho-Corasick Automaton;Hash Collision;Multi-string Matching;Perfect Hash Table,Algorithm design and analysis;Automata;Bipartite graph;Indexes;Memory management;Security;Throughput,automata theory;computer network security;file organisation;set theory;string matching,Aho-Corasick automaton;NIDS design;P<sup>2</sup>-hashing algorithm;fast hash index generation;hash table;high-speed string matching;multidimensional progressive perfect hashing algorithm;network intrusion detection system;rule sets;source state ID;zero memory overhead,,1,,27,,,3-4 Oct. 2011,,IEEE,IEEE Conference Publications
String Searching Engine for Virus Scanning,"Pao, D.; Xing Wang; Xiaoran Wang; Cong Cao; Yuesheng Zhu","Dept. of Electron. Eng., City Univ. of Hong Kong, Hong Kong, China","Computers, IEEE Transactions on",20110926,2011,60,11,1596,1609,"A memory-efficient hardware string searching engine for antivirus applications is presented. The proposed QSV method is based on quick sampling of the input stream against fixed-length pattern prefixes, and on-demand verification of variable-length pattern suffixes. Patterns handled by the QSV method are required to have at least 16 bytes, and possess distinct 16-byte prefixes. The latter requirement can be fulfilled by a preprocessing procedure. The search engine uses the pipelined Aho-Corasick (P-AC) architecture developed by the first author to process 4 to 15-byte short patterns and a small number of exception cases. Our design was evaluated using the ClamAV virus database having 82,888 strings with a total size that exceeds 8 Mbyte. In terms of byte count, 99.3 percent of the pattern set is handled by the QSV method and 0.7 percent of the pattern set is handled by P-AC. A pattern with distinct 16-byte prefix only occupies up to three lookup table entries in QSV. The overall memory cost of our system is about 1.4 Mbyte, i.e., 1.4 bit per character of the ClamAV pattern set. The proposed method is memory-based, hence, updates to the pattern set can be accommodated by modifying the contents of the lookup tables without reconfiguring the hardware circuits.",0018-9340,,,10.1109/TC.2010.250,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5669261,String searching;antivirus system;embedded system.;system security,Algorithm design and analysis;Databases;Engines;Hardware;Memory management;Pattern matching;Table lookup,computer viruses;formal verification;pipeline processing;sampling methods;search engines;string matching;table lookup,QSV method;antivirus system;fixed length pattern prefixe;lookup tables;on-demand verification;pipelined Aho-Corasick architecture;quick sampling;search engine;string searching;variable length pattern suffixes;virus scanning,,2,,27,,12/17/2010,Nov. 2011,,IEEE,IEEE Journals & Magazines
CompactDFA: Generic State Machine Compression for Scalable Pattern Matching,"Bremler-Barr, A.; Hay, D.; Koral, Y.","Comput. Sci. Dept., Interdiscipl. Center, Herzliya, Israel","INFOCOM, 2010 Proceedings IEEE",20100506,2010,,,1,9,"Pattern matching algorithms lie at the core of all contemporary Intrusion Detection Systems (IDS), making it intrinsic to reduce their speed and memory requirements. This paper focuses on the most popular class of pattern-matching algorithms, the Aho-Corasick-like algorithms, which are based on constructing and traversing a Deterministic Finite Automaton (DFA), representing the patterns. While this approach ensures deterministic time guarantees, modern IDSs need to deal with hundreds of patterns, thus requiring to store very large DFAs which usually do not fit in fast memory. This results in a major bottleneck on the throughput of the IDS, as well as its power consumption and cost. We propose a novel method to compress DFAs by observing that the name of the states is meaningless. While regular DFAs store separately each transition between two states, we use this degree of freedom and encode states in such a way that all transitions to a specific state can be represented by a single prefix that defines a set of current states. Our technique applies to a large class of automata, which can be categorized by simple properties. Then, the problem of pattern matching is reduced to the well-studied problem of Longest Prefix Matching (LPM) that can be solved either in TCAM, in commercially available IP-lookup chips, or in software. Specifically, we show that with a TCAM our scheme can reach a throughput of 10 Gbps with low power consumption.",0743-166X,978-1-4244-5836-3,,10.1109/INFCOM.2010.5462160,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5462160,,Automata;Communications Society;Computer science;Doped fiber amplifiers;Energy consumption;Hardware;Intrusion detection;Pattern matching;Throughput;USA Councils,data compression;deterministic automata;finite state machines;pattern matching;security of data,Aho-Corasick-like algorithms;IP-lookup chips;TCAM;bit rate 10 Gbit/s;compactDFA;deterministic finite automaton;generic state machine compression;intrusion detection systems;longest prefix matching;low power consumption;power consumption;scalable pattern matching algorithms,,14,1,21,,,14-19 March 2010,,IEEE,IEEE Conference Publications
Evaluation of Multiclass Novelty Detection Algorithms for Data Streams,"de Faria, E.R.; Goncalves, I.R.; Gama, J.a.; Carvalho , A.C.P.d.L.F.","Computing School, Federal University of Uberl??ndia, Uberl&#x00E2;ndia, Brazil","Knowledge and Data Engineering, IEEE Transactions on",20151005,2015,27,11,2961,2973,"Data stream mining is an emergent research area that investigates knowledge extraction from large amounts of continuously generated data, produced by non-stationary distribution. Novelty detection, the ability to identify new or previously unknown situations, is a useful ability for learning systems, especially when dealing with data streams, where concepts may appear, disappear, or evolve over time. There are several studies currently investigating the application of novelty detection techniques in data streams. However, there is no consensus regarding how to evaluate the performance of these techniques. In this study, we propose a new evaluation methodology for multiclass novelty detection in data streams able to deal with: i) unsupervised learning, which generates <italic>novelty patterns </italic> without an association with the true classes, where one class may be composed of a novelty set, ii) confusion matrix that increases over time, iii) confusion matrix with a column representing <italic>unknown</italic> examples, i.e., those not explained by the model, and iv) representation of the evaluation measures over time. We propose a new methodology to associate the <italic>novelty patterns</italic> detected by the algorithm, in an unsupervised fashion, with the true classes. Finally, we evaluate the performance of the proposed methodology through the use of known novelty detection algorithms with artificial and real data sets.",1041-4347,,,10.1109/TKDE.2015.2441713,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7118190,Evaluation methodologies;data streams;evaluation methodology;novelty detection,Context;Data mining;Decision support systems;Electronic mail;Mathematical model;Measurement uncertainty;Time measurement,,,,0,,47,,6/4/2015,Nov. 1 2015,,IEEE,IEEE Journals & Magazines
A Scalable High-Performance Virus Detection Processor Against a Large Pattern Set for Embedded Network Security,Chieh-Jen Cheng; Chao-Ching Wang; Wei-Chun Ku; Tien-Fu Chen; Jinn-Shyan Wang,"Dept. of Comput. Sci. & Inf. Eng., Nat. Chung Cheng Univ., Chiayi, Taiwan","Very Large Scale Integration (VLSI) Systems, IEEE Transactions on",20120405,2012,20,5,841,854,"Contemporary network security applications generally require the ability to perform powerful pattern matching to protect against attacks such as viruses and spam. Traditional hardware solutions are intended for firewall routers. However, the solutions in the literature for firewalls are not scalable, and they do not address the difficulty of an antivirus with an ever-larger pattern set. The goal of this work is to provide a systematic virus detection hardware solution for network security for embedded systems. Instead of placing entire matching patterns on a chip, our solution is a two-phase dictionary-based antivirus processor that works by condensing as much of the important filtering information as possible onto a chip and infrequently accessing off-chip data to make the matching mechanism scalable to large pattern sets. In the first stage, the filtering engine can filter out more than 93.1% of data as safe, using a merged shift table. Only 6.9% or less of potentially unsafe data must be precisely checked in the second stage by the exact-matching engine from off-chip memory. To reduce the impact of the memory gap, we also propose three enhancement algorithms to improve performance: 1) a skipping algorithm; 2) a cache method; and 3) a prefetching mechanism.",1063-8210,,,10.1109/TVLSI.2011.2119382,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5740396,Algorithmic attacks;embedded system;memory gap;network security;virus detection,Engines;Field programmable gate arrays;Memory management;Pattern matching;Random access memory;Security;System-on-a-chip,authorisation;cache storage;computer network security;computer viruses;information filtering;microprocessor chips;pattern matching,antivirus;cache method;embedded network security;exact-matching engine;filtering engine;firewall routers;large pattern set;memory gap impact reduction;merged shift table;network attack protection;off-chip data accessing;off-chip memory;pattern matching;performance improvement;prefetching mechanism;scalable high-performance virus detection processor;skipping algorithm;systematic virus detection hardware solution;two-phase dictionary-based antivirus processor,,0,,25,,3/28/2011,May-12,,IEEE,IEEE Journals & Magazines
Design of Cloud-Based Parallel Exclusive Signature Matching Model in Intrusion Detection,Yuxin Meng; Wenjuan Li; Lam-for Kwok,"Dept. of Comput. Sci., City Univ. of Hong Kong, Hong Kong, China","High Performance Computing and Communications & 2013 IEEE International Conference on Embedded and Ubiquitous Computing (HPCC_EUC), 2013 IEEE 10th International Conference on",20140612,2013,,,175,182,"Signature-based intrusion detection systems have been widely deployed in current network environments to defend against various attacks, but the expensive process of signature matching is a major suffering problem for these detection systems. Thus, a high-performance signature matching scheme is of great importance for a signature-based IDS. In our previous work, we have developed an exclusive signature matching scheme that aims to identify a mismatch instead of locating an accurate match and achieved good results in the experiments. With the advent of Cloud Computing, IDS as a service (IDSaaS) has been proposed as an alternative by offloading the expensive operations such as the process of signature matching to the cloud. In this paper, we attempt to design a parallel model to conduct the exclusive signature matching in a cloud. In the evaluation, we implemented our model in a cloud environment and investigated its performance compared with Snort. The experimental results indicate that our proposed model can achieve promising performance in such a cloud environment.",,,,10.1109/HPCC.and.EUC.2013.34,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6831916,Cloud Computing;Exclusive Signature Matching;Intrusion Detection;Parallel Model,Cloud computing;Computational modeling;Graphics processing units;Intrusion detection;Pattern matching;Payloads;Throughput,cloud computing;computer network security;digital signatures;parallel processing;pattern matching,IDS as a service;IDSaaS;cloud computing;cloud environment;cloud-based parallel exclusive signature matching model;high-performance signature matching scheme;signature-based IDS;signature-based intrusion detection systems,,0,,41,,,13-15 Nov. 2013,,IEEE,IEEE Conference Publications
Realizing a Sub-Linear Time String-Matching Algorithm With a Hardware Accelerator Using Bloom Filters,Po-Ching Lin; Yin-Dar Lin; Yuan-Cheng Lai; Yi-Jun Zheng; Tsern-Huei Lee,"Dept. of Comput. Sci., Nat. Chiao Tung Univ., Hsinchu, Taiwan","Very Large Scale Integration (VLSI) Systems, IEEE Transactions on",20090721,2009,17,8,1008,1020,"Many network security applications rely on string matching to detect intrusions, viruses, spam, and so on. Since software implementation may not keep pace with the high-speed demand, turning to hardware-based solutions becomes promising. This work presents an innovative architecture to realize string matching in sub-linear time based on algorithmic heuristics, which come from parallel queries to a set of space-efficient Bloom filters. The algorithm allows skipping characters not in a match in the text, and in turn simultaneously inspect multiple characters in effect. The techniques to reduce the impact of certain bad situations on performance are also proposed: the <i>bad-block</i> heuristic, a linear worst-case time method and a non-blocking interface to hand over the verification job to a verification module. This architecture is simulated with both behavior simulation in C and timing simulation in HDL for antivirus applications. The simulation shows that the throughput of scanning Windows executable files for more than 10000 virus signatures can achieve 5.64 Gb/s, while the worst-case performance is 1.2 Gb/s if the signatures are properly specified.",1063-8210,,,10.1109/TVLSI.2008.2012011,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4840440,Algorithms;field-programmable gate arrays (FPGAs);string matching,,C language;digital signatures;field programmable gate arrays;hardware description languages;integrated circuit design;logic design;program verification;string matching,Bloom filter;C language;HDL;algorithmic heuristics;antivirus application;bad-block heuristic;behavior simulation;field programmable gate array;hardware accelerator;linear worst-case time method;network security;nonblocking interface;parallel query;sublinear time string-matching algorithm;timing simulation;verification module;virus signature,,5,,39,,4/24/2009,Aug. 2009,,IEEE,IEEE Journals & Magazines
A Survey on the Application of FPGAs for Network Infrastructure Security,"Hao Chen; Yu Chen; Summerville, D.H.","Dept. of Electr. & Comput. Eng., State Univ. of New York (SUNY) - Binghamton, Binghamton, NY, USA","Communications Surveys & Tutorials, IEEE",20111103,2011,13,4,541,561,"Given the rapid evolution of attack methods and toolkits, software-based solutions to secure the network infrastructure have become overburdened. The performance gap between the execution speed of security software and the amount of data to be processed is ever widening. A common solution to close this performance gap is through hardware implementation of security functions. Possessing the flexibility of software and high parallelism of hardware, reconfigurable hardware devices, such as Field Programmable Gate Arrays (FPGAs), have become increasingly popular for this purpose. FPGAs support the performance demands of security operations as well as enable architectural and algorithm innovations in the future. This paper presents a survey of the state-of-art in FPGA-based implementations that have been used in the network infrastructure security area, categorizing currently existing diverse implementations. Combining brief descriptions with intensive case-studies, we hope this survey will inspire more active research in this area.",1553-877X,,,10.1109/SURV.2011.072210.00075,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5556740,FPGA;Hardware-based Application;Network Infrastructure Security;Network Security,Computer crime;Field programmable gate arrays;Internet;Network security;Protocols,Internet;computer network security;field programmable gate arrays,FPGA;Internet;field programmable gate arrays;network infrastructure security;reconfigurable hardware devices;security software;software-based solutions,,10,,118,,8/23/2010,Fourth Quarter 2011,,IEEE,IEEE Journals & Magazines
Agentless Processes Monitoring Architecture on Cloud Platform,Jingsong Cui; Hao Xiang; Chi Guo; Kun Hou,"Key Lab. of Aerosp. Inf. & Trusted Comput., Wuhan Univ., Wuhan, China","Cloud Computing and Big Data (CCBD), 2014 International Conference on",20150319,2014,,,1,7,"To reduce CPU, memory and bandwidth usage as cloud platform security consumption, and to prevent vulnerabilities that brought in by VM based antivirus software, we propose an agentless processes monitoring architecture for cloud platform. To demonstrate this architecture, we modified KVM kernel, programed OpenStack plugins, added security module on both management and compute node in a cloud platform. With this architecture, we are able to monitoring all processes running on every VMs agentless in one cloud platform, then locate and terminate suspicious processes. Analysis and test results showed that this architecture is able to reduce resource consumption for cloud platform security and increase its security level.",,,,10.1109/CCBD.2014.37,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7062864,agentless technique;cloud security;process monitoring,Cloud computing;Computer architecture;Kernel;Monitoring;Registers;Security;Servers,cloud computing;computer viruses;operating system kernels;process monitoring;software architecture;virtual machines,CPU;KVM kernel;VM based antivirus software;agentless processes monitoring architecture;bandwidth usage;cloud platform security consumption;memory usage;process monitoring;programed OpenStack plugin;resource consumption;security module,,0,,20,,,12-14 Nov. 2014,,IEEE,IEEE Conference Publications
CPIndex: Cyber-Physical Vulnerability Assessment for Power-Grid Infrastructures,"Vellaithurai, C.; Srivastava, A.; Zonouz, S.; Berthier, R.","Dept. of Electr. Eng. & Comput. Sci., Washington State Univ., Pullman, WA, USA","Smart Grid, IEEE Transactions on",20150216,2015,6,2,566,575,"To protect complex power-grid control networks, power operators need efficient security assessment techniques that take into account both cyber side and the power side of the cyber-physical critical infrastructures. In this paper, we present CPINDEX, a security-oriented stochastic risk management technique that calculates cyber-physical security indices to measure the security level of the underlying cyber-physical setting. CPINDEX installs appropriate cyber-side instrumentation probes on individual host systems to dynamically capture and profile low-level system activities such as interprocess communications among operating system assets. CPINDEX uses the generated logs along with the topological information about the power network configuration to build stochastic Bayesian network models of the whole cyber-physical infrastructure and update them dynamically based on the current state of the underlying power system. Finally, CPINDEX implements belief propagation algorithms on the created stochastic models combined with a novel graph-theoretic power system indexing algorithm to calculate the cyber-physical index, i.e., to measure the security-level of the system's current cyber-physical state. The results of our experiments with actual attacks against a real-world power control network shows that CPINDEX, within few seconds, can efficiently compute the numerical indices during the attack that indicate the progressing malicious attack correctly.",1949-3053,,,10.1109/TSG.2014.2372315,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6979242,Cyber-physical security metrics;cyber-physical systems;intrusion detection systems;situational awareness,Generators;Indexes;Power measurement;Security;Smart grids,Bayes methods;graph theory;power engineering computing;power grids;power system control;power system security;risk management;stochastic processes,CPIndex;cyber-physical critical infrastructures;cyber-physical security indices;cyber-physical vulnerability assessment;cyber-side instrumentation probes;graph-theoretic power system indexing algorithm;interprocess communications;numerical indices;operating system assets;power network configuration;power operators;power-grid Infrastructures;power-grid control networks;security assessment techniques;security-oriented stochastic risk management technique;stochastic Bayesian network models,,1,,20,,12/8/2014,Mar-15,,IEEE,IEEE Journals & Magazines
Hybrid memory architecture for regular expression matching,Cheng-Hung Lin,"Nat. Taiwan Normal Univ., Taipei, Taiwan","Circuits and Systems, 2009. MWSCAS '09. 52nd IEEE International Midwest Symposium on",20090915,2009,,,1159,1162,"Regular expression matching has been widely used in network intrusion detection systems due to its strong expressive power and flexibility. To match multiple regular expression patterns simultaneously, compiling multiple regular expressions into a composite DFA is an intuitive and efficient way. However, traditional memory architecture suffers from the problem of memory explosion for certain complex regular expressions. In this paper, we propose a hybrid memory architecture which inserts marginal logic elements to improve the ability of traditional memory architecture to deal with complex regular expressions. The experimental results demonstrate a significant memory reduction for complex regular expressions.",1548-3746,978-1-4244-4479-3,978-1-4244-4480-9,10.1109/MWSCAS.2009.5235940,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5235940,,Automata;Computer architecture;Doped fiber amplifiers;Explosions;Hardware;Intrusion detection;Logic;Memory architecture;Pattern matching;Payloads,memory architecture;pattern matching;security of data,hybrid memory architecture;memory reduction;network intrusion detection systems;regular expression matching,,0,,19,,,2-5 Aug. 2009,,IEEE,IEEE Conference Publications
A Memory-Efficient and Modular Approach for String Matching on FPGAs,"Hoang Le; Prasanna, V.K.","Ming Hsieh Dept. of Electr. Eng., Univ. of Southern California, Los Angeles, CA, USA","Field-Programmable Custom Computing Machines (FCCM), 2010 18th IEEE Annual International Symposium on",20100601,2010,,,193,200,"In Network Intrusion Detection Systems (NIDSs), string matching demands exceptionally high performance to match the content of network traffic against a predefined database of malicious patterns. Much work has been done in this field; however, they result in low memory efficiency. Due to the available on-chip memory and the number of I/O pins of Field Programmable Gate Arrays (FPGAs), state-of-the-art designs cannot support large dictionaries without using high-latency external DRAM. We propose a novel Memory efficient Architecture for large-scale String Matching (MASM), based on pipelined binary search tree. With memory efficiency close to 1 byte/char, MASM can support a dictionary of over 4 MBytes, using a single FPGA device. The architecture can also be easily partitioned, so as to use external SRAM to handle even larger dictionaries of over 8 MBytes. Our implementation results show a sustained throughput of 3.5 Gbps, even when external SRAM is used. The MASM module can be simply duplicated to accept multiple characters per cycle, leading to scalable throughput with respect to the number of characters processed in each cycle. Dictionary update involves only rewriting the memory content, which can be done quickly without reconfiguring the chip.",,978-0-7695-4056-6,978-1-4244-7143-0,10.1109/FCCM.2010.37,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5474050,FPGA;NIDS;NIPS;deep packet inspection;string matching,Databases;Dictionaries;Field programmable gate arrays;Intrusion detection;Memory architecture;Pattern matching;Pins;Random access memory;Telecommunication traffic;Throughput,SRAM chips;field programmable gate arrays;pattern matching;tree searching,FPGA;MASM;SRAM;field programmable gate arrays;large-scale string matching;malicious patterns;memory efficient architecture;memory-efficient approach;network intrusion detection systems;network traffic;on-chip memory;pipelined binary search tree,,2,,17,,,2-4 May 2010,,IEEE,IEEE Conference Publications
A physical overlay framework for insider threat mitigation of power system devices,"Formby, D.; Sang Shin Jung; Walters, S.; Beyah, R.","Commun. Assurance & Performance (CAP)Group, Georgia Inst. of Technol., Atlanta, GA, USA","Smart Grid Communications (SmartGridComm), 2014 IEEE International Conference on",20150115,2014,,,970,975,"Nearly every aspect of modern life today, from businesses, transportation, and healthcare, depends on the power grid operating safely and reliably. While the recent push for a “Smart Grid” has shown promise for increased efficiency, security has often been an after-thought, leaving this critical infrastructure vulnerable to a variety of cyber attacks. For instance, devices crucial to the safe operation of the power grid are left in remote substations with their configuration interfaces completely open, providing a vector for outsiders as well as insiders to launch an attack. This paper develops the framework for an overlay network of gateway devices that provide authenticated access control and security monitoring for these vulnerable interfaces. We develop a working prototype of such a device and simulate the performance of deployment throughout a substation. Our results suggest that such a system can be deployed with negligible impact on normal operations, while providing important security mechanisms. By doing so, we demonstrate that our proposal is a practical and efficient solution for retro-fitting security onto crucial power system devices.",,,,10.1109/SmartGridComm.2014.7007774,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7007774,,Maintenance engineering;Performance evaluation;Security;Smart grids;Substations;Universal Serial Bus,authorisation;message authentication;overlay networks;power engineering computing;power system measurement;power system security;smart power grids;substations,authenticated access control;configuration interfaces;cyber attacks;gateway devices;insider threat mitigation;overlay network;physical overlay framework;power grid;power system devices;remote substations;retro-fitting security;security mechanisms;security monitoring;smart grid,,0,,22,,,3-6 Nov. 2014,,IEEE,IEEE Conference Publications
Honeyware: A Web-Based Low Interaction Client Honeypot,"Alosefer, Y.; Rana, O.","Sch. of Comput. Sci. & Inf., Cardiff Univ., Cardiff, UK","Software Testing, Verification, and Validation Workshops (ICSTW), 2010 Third International Conference on",20100513,2010,,,410,417,"Modern attacks are being made against client side applications, such as web browsers, which most users use to surf and communicate on the internet. Client honeypots visit and interact with suspect web sites in order to detect and collect information about malware to protect users from malicious websites or to allow security professionals to investigate malicious content. This paper will present the idea of using web-based technology and integrating it with a client honeypot by building a low interaction client honeypot tool called Honeyware. It describes the benefits of Honeyware as well as the challenges of a low interaction client honeypot and provides some ideas for how these challenges could be overcome.",,978-1-4244-6773-0,,10.1109/ICSTW.2010.41,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5463678,Honeyware;client honeypot;honeypot;malicious web-based,Application software;Computer science;Informatics;Internet;Operating systems;Queueing analysis;Search engines;Software testing;Uniform resource locators;Web pages,Web sites;computer crime;invasive software,Honeyware;Internet;Web browser;Web-based technology;client honeypot;client side application;malicious Web site;malware;modern attack,,2,1,23,,,6-10 April 2010,,IEEE,IEEE Conference Publications
Performance Evaluation of Multi-pattern Matching Algorithms on Smartphone,"Amamra, A.; Talhi, C.; Robert, J.","Dept. of Software Eng. &amp; Inf. Technol., Ecole de Technol. Super., Montreal, QC, Canada","Broadband, Wireless Computing, Communication and Applications (BWCCA), 2012 Seventh International Conference on",20130121,2012,,,329,334,"Dramatic increase of smartphones malwares has imposed adopting malware detection solution for them. Signature-based technique is widely used in commercial Antivirus and it is based on multi-pattern matching algorithms. In this paper, we discuss several multi-pattern matching algorithms and review their complexities. We implement and evaluate their performance on limited resources environment, which is Android Smartphone. We study Android memory management and identify the available memory. We compare the available memory with required by each algorithm. We classify algorithms according to their memory budgets.",,978-1-4673-2972-9,,10.1109/BWCCA.2012.61,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6363077,Malware Detection;Pattern Matching;Signature-based technique;Smartphone;Smartphone Memory,Algorithm design and analysis;Classification algorithms;Malware;Memory management;Pattern matching;Random access memory;Smart phones,Linux;digital signatures;invasive software;pattern matching;performance evaluation;resource allocation;smart phones;storage management,Android memory management;Android smartphone;available memory identification;commercial antivirus;limited resource environment;malware detection solution;multipattern matching algorithms;performance evaluation;signature-based technique;smartphone malwares,,0,,25,,,12-14 Nov. 2012,,IEEE,IEEE Conference Publications
A fast multi-pattern matching algorithm for anti-virus scanning,Xuejuan Li; Qiaoyan Wen,"State Key Lab. of Networking & Switching Technol., Beijing Univ. of Posts & Telecommun., Beijing, China","Broadband Network and Multimedia Technology (IC-BNMT), 2011 4th IEEE International Conference on",20120223,2011,,,42,45,"Anti-virus Scanning is one of the key technologies in today's network security field. Multi-pattern matching algorithm plays an important role in the anti-virus applications. This paper analyzed some commonly used pattern matching algorithm. On the basis of AC-BNFA algorithm, this paper proposed an algorithm handling viruses with more than one signatures quickly. Experiments show that this algorithm is much faster than both exsited automaton-based algorithms and BM algorithm without consuming much memory.",,978-1-61284-158-8,,10.1109/ICBNMT.2011.6155892,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6155892,AC-BNFA;Anti-virus Scanning;multi-pattern matching,Algorithm design and analysis;Arrays;Automata;Complexity theory;Pattern matching;Viruses (medical),computer viruses;finite automata;pattern matching,AC-BNFA algorithm;BM algorithm;antivirus scanning;automaton-based algorithm;multipattern matching algorithm;network security;nondeterministic finite automata,,0,,12,,,28-30 Oct. 2011,,IEEE,IEEE Conference Publications
A Memory-Efficient and Modular Approach for Large-Scale String Pattern Matching,"Hoang Le; Prasanna, V.K.","Dept. of Electr. & Comput. Eng., Univ. of Southern California, Los Angeles, CA, USA","Computers, IEEE Transactions on",20130328,2013,62,5,844,857,"In Network Intrusion Detection Systems (NIDSs), string pattern matching demands exceptionally high performance to match the content of network traffic against a predefined database (or dictionary) of malicious patterns. Much work has been done in this field; however, most of the prior work results in low memory efficiency (defined as the ratio of the amount of the required storage in bytes and the size of the dictionary in number of characters). Due to such inefficiency, state-of-the-art designs cannot support large dictionaries without using high-latency external DRAM. We propose an algorithm called ""leaf-attaching"" to preprocess a given dictionary without increasing the number of patterns. The resulting set of postprocessed patterns can be searched using any tree-search data structure. We also present a scalable, high-throughput, Memory-efficient Architecture for large-scale String Matching (MASM) based on a pipelined binary search tree. The proposed algorithm and architecture achieve a memory efficiency of 0.56 (for the Rogets dictionary) and 1.32 (for the Snort dictionary). As a result, our design scales well to support larger dictionaries. Implementations on 45 nm ASIC and a state-of-the-art FPGA device (for latest Rogets and Snort dictionaries) show that our architecture achieves 24 and 3.2 Gbps, respectively. The MASM module can simply be duplicated to accept multiple characters per cycle, leading to scalable throughput with respect to the number of characters processed in each cycle. Dictionary update involves simply rewriting the content of the memory, which can be done quickly without reconfiguring the chip.",0018-9340,,,10.1109/TC.2012.38,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6148214,ASIC;Aho-Corasick;DFA;Databases;Dictionaries;Memory management;Pattern matching;Rogets;Snort;String matching;Throughput;Vectors;field-programmable gate array (FPGA);leaf attaching;pipeline;reconfigurable,Databases;Dictionaries;Memory management;Pattern matching;Throughput;Vectors,Internet;application specific integrated circuits;computer network security;field programmable gate arrays;storage management;string matching;tree searching,ASIC;FPGA device;MASM module;NIDS;Rogets dictionary;Snort dictionary;characters per cycle;content matching;dictionary dictionary;dictionary preprocessing;dictionary update;high-latency external DRAM;large-scale string pattern matching;leaf-attaching;malicious pattern dictionary;memory content rewriting;modular approach;network intrusion detection systems;network traffic;pipelined binary search tree;predefined database;scalable high-throughput memory-efficient architecture;tree-search data structure,,1,,19,,2/7/2012,May-13,,IEEE,IEEE Journals & Magazines
Malware detection based on Cloud Computing integrating Intrusion Ontology representation,"Martinez, C.A.; Echeverri, G.I.; Sanz, A.G.C.","Ecole Super. d''Ing. en Electron. et Electrotech., Pari&#x0301;s, France","Communications (LATINCOM), 2010 IEEE Latin-American Conference on",20101118,2010,,,1,6,"This paper aims to present a model for malware detection, uCLAVS (University of Caldas' AntiVirus Service), a multiple engine service that follows the set of defined protocols and standards for Web Services technologies, in addition an Ontology for Malware and Intrusion Detection is described. uCLAVS is based on the idea that the files analysis commonly carried by applications residing on the client can improve their performance if they are moved to the network, where instead of running complex software on every host, it gives each process a receiving the light entering the system files, send them to the network to be analyzed by multiple engines, and then to decide whether or not they are executed according to the report of threat delivered. As a result of the tests with the prototype can be uCLAVS arguing, among other things, that offers the possibility of increasing the rate of the assertion characterization harmful files, allows the construction of thin clients, facilitates zero-day updates, and provides a forensic capabilities enhancement.",,978-1-4244-7171-3,,10.1109/LATINCOM.2010.5641013,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5641013,Antivirus;Cloud Computing;Cloud Security Intrusion Detection;Intrusion Prevention;Malware Detection;Ontology for Malware Detection;Web Services,Cognition;Engines;Intrusion detection;Malware;Ontologies;Protocols;Web services,Web services;invasive software;ontologies (artificial intelligence);ubiquitous computing,Web services technology;cloud computing;intrusion detection;intrusion ontology representation;malware detection;uCLAVS,,7,,11,,,15-17 Sept. 2010,,IEEE,IEEE Conference Publications
Towards High-Performance Pattern Matching on Multi-Core Network Processing Platforms,Yaxuan Qi; Zongwei Zhou; Yiyao Wu; Yibo Xue; Jun Li,"Dept. of Autom., Tsinghua Univ., Beijing, China","Global Telecommunications Conference (GLOBECOM 2010), 2010 IEEE",20110110,2010,,,1,5,"With the continual growth of network speed and the increasing sophistication of network applications, keeping network operations efficient and secure becomes more challenging. Pattern matching is one of the key technologies for content-ware network processing, such as traffic classification, application identification and intrusion prevention. In this paper, we propose a hybrid pattern matching algorithm optimized for multi-core network processing platforms. As a system-level solution, our scheme focuses on both performance stability and hardware/software co-design. To verify the effectiveness of our design, the proposed algorithm is implemented on a state-of-art 16-MIPS-core network processing platform and evaluated with real-life data sets. Experimental results show that, when compared with the traditional Aho-Corasick algorithm, our hybrid solution saves 60~95% memory space while guarantees stable performance on large pattern sets and against adverse test traffic.",1930-529X,978-1-4244-5636-9,978-1-4244-5637-6,10.1109/GLOCOM.2010.5684120,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5684120,,Algorithm design and analysis;Data structures;Doped fiber amplifiers;Hardware;Pattern matching;Software;Software algorithms,multiprocessing systems;pattern matching,application identification;content-ware network processing;high-performance pattern matching;hybrid pattern matching algorithm;intrusion prevention;multicore network processing platforms;traffic classification,,0,,9,,,6-10 Dec. 2010,,IEEE,IEEE Conference Publications
Benchmarking of compressed DFAs for traffic identification: Decoupling data structures from models,"Melo, W.; Fernandes, S.; Antonello, R.; Sadok, D.; Kelner, J.; Szabo, G.","Fed. Univ. of Pernambuco (UFPE), Recife, Brazil","Global Communications Conference (GLOBECOM), 2012 IEEE",20130422,2012,,,1763,1769,"Current network traffic analysis systems heavily rely on Deep Packet Inspection (DPI) techniques, such as Finite Automata (FA), to detect patterns carried by regular expression (regex). However, traditional Finite Automata cannot keep up with the ever-growing speed of the Internet links. Although there are a number of efficient FA compressing mechanisms for DPIs, there is no standardized or common way to evaluate and compare them. In this scenario, this paper proposes a methodology to evaluate and compare automaton models and the data-structures that materialize them. We also adapt state-of-the-art memory layouts to better fit in today's computer architectures. Finally, we apply our methodology to most important automaton models, memory layouts, and well-known signature sets. The results show us that some memory layouts are not efficient for regexes that represent small automata and other ones which fit only with uncompressed automata. Further, we also found out that theoretical studies about memory usage from memory encodings are not as accurate as they should be.",1930-529X,978-1-4673-0920-2,978-1-4673-0919-6,10.1109/GLOCOM.2012.6503370,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6503370,DFA Models;Deep Packet Inspection;Performance Evaluation,,Internet;data compression;data structures;deterministic automata;finite automata;inspection;telecommunication traffic,DPI;FA compressing mechanisms;Internet links;automaton models;compressed DFA;computer architectures;data structure decoupling;deep packet inspection techniques;deterministic finite automata;memory encodings;memory layouts;network traffic analysis systems;regular expression;signature sets;traffic identification,,1,,20,,,3-7 Dec. 2012,,IEEE,IEEE Conference Publications
Phishing Detection: A Literature Survey,"Khonji, M.; Iraqi, Y.; Jones, A.","Khalifa Univ., Abu Dhabi, United Arab Emirates","Communications Surveys & Tutorials, IEEE",20131112,2013,15,4,2091,2121,"This article surveys the literature on the detection of phishing attacks. Phishing attacks target vulnerabilities that exist in systems due to the human factor. Many cyber attacks are spread via mechanisms that exploit weaknesses found in end-users, which makes users the weakest element in the security chain. The phishing problem is broad and no single silver-bullet solution exists to mitigate all the vulnerabilities effectively, thus multiple techniques are often implemented to mitigate specific attacks. This paper aims at surveying many of the recently proposed phishing mitigation techniques. A high-level overview of various categories of phishing mitigation techniques is also presented, such as: detection, offensive defense, correction, and prevention, which we belief is critical to present where the phishing detection techniques fit in the overall mitigation process.",1553-877X,,,10.1109/SURV.2013.032213.00009,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6497928,Phishing;email classification;phishing detection;security;social engineering,Bibliographies;Phishing;Publishing,computer crime;computer network security,cyber attack;phishing attack detection;phishing mitigation technique;security chain;target vulnerability,,5,,54,,4/15/2013,Fourth Quarter 2013,,IEEE,IEEE Journals & Magazines
Filling Your Cyber Operations Training Toolbox,"Pauli, J.; Engebretson, P.",,"Security & Privacy, IEEE",20121004,2012,10,5,71,74,This training article introduces readers to the specific tools and skills needed to best provide cyber operations education and training to university students at the undergraduate and graduate level. It isn't a curriculum-mapping exercise but rather a detailed listing of tools and techniques that can be included in existing and new courses to best align with the NSA's new Center of Academic Excellence in Cyber Operations (CAE-CO).,1540-7993,,,10.1109/MSP.2012.117,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6322975,CAE-CO;Center of Academic Excellence in Cyber Operations;NSA;Web application hacking;curriculum;cyber operations;cybersecurity;debugging;education;exploitation;malware analysis;network hacking;reverse engineering;shell code development;training,Computer crime;Cyberspace;Education;Reverse engineering;Training;Web services,computer based training;educational courses;further education;government data processing;national security,CAE-CO;Center of Academic Excellence in Cyber Operations;NSA;US National Security Agency;cyber operations education;cyber operations training toolbox;graduate level;undergraduate level,,0,,,,,Sept.-Oct. 2012,,IEEE,IEEE Journals & Magazines
Development of a Secure Traffic Analysis System to Trace Malicious Activities on Internal Networks,"Hirono, S.; Yamaguchi, Y.; Shimada, H.; Takakura, H.","Grad. Sch. of Inf. Sci., Nagoya Univ., Nagoya, Japan","Computer Software and Applications Conference (COMPSAC), 2014 IEEE 38th Annual",20140922,2014,,,305,310,"In contrast to conventional cyber attacks such as mass infection malware, targeted attacks take a long time to complete their mission. By using a dedicated malware for evading detection at the initial attack, an attacker quietly succeeds in setting up a front-line base in the target organization. Communication between the attacker and the base adopts popular protocols to hide its existence. Because conventional countermeasures deployed on the boundary between the Internet and the internal network will not work adequately, monitoring on the internal network becomes indispensable. In this paper, we propose an integrated sandbox system that deploys a secure and transparent proxy to analyze internal malicious network traffic. The adoption of software defined networking technology makes it possible to redirect any internal traffic from/to a suspicious host to the system for an examination of its insidiousness. When our system finds malicious activity, the traffic is blocked. If the malicious traffic is regarded as mandatory, e.g., For controlled delivery, the system works as a transparent proxy to bypass it. For benign traffic, the system works as a transparent proxy, as well. If binary programs are found in traffic, they are automatically extracted and submitted to a malware analysis module of the sandbox. In this way, we can safely identify the intention of the attackers without making them aware of our surveillance.",,,,10.1109/COMPSAC.2014.41,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6899231,dynamic analysis;malware;sandbox;targeted attack,Electronic mail;Indexes;Internet;Malware;Protocols;Servers,Internet;invasive software;telecommunication security;telecommunication traffic,Internet;cyber attacks;integrated sandbox system;internal malicious network traffic analysis;internal networks;malware analysis module;mass infection malware;secure proxy;secure traffic analysis system;software defined networking technology;transparent proxy,,1,,9,,,21-25 July 2014,,IEEE,IEEE Conference Publications
Searching Structural Neighborhood of Malicious URLs to Improve Blacklisting,"Akiyama, M.; Yagi, T.; Itoh, M.","NTT Inf. Sharing Platform Labortories, NTT Corp., Musashino, Japan","Applications and the Internet (SAINT), 2011 IEEE/IPSJ 11th International Symposium on",20110825,2011,,,1,10,"Filtering based on blacklists is a major countermeasure against malicious websites. However, blacklists must be updated because malicious URLs tend to be short-lived and their sub strings may be partially mutated to avoid blacklisting. Due to these characteristics, it can be assumed that unknown malicious URLs exist in the neighborhood of known malicious URLs, created by the same adversary. We propose an effective blacklist URL generation method. We try to discover the URLs in the neighborhood of a malicious URL by using a search engine. Those suspicious neighborhoods around malicious URLs require further investigation to determine their blacklisting candidacy. We experimentally evaluated the proposed generation method by using real blacklisted URLs for both drive-by-download and click-download infection. The results showed that the proposed method can effectively improve identification of malicious URLs and maintenance of the coverage of blacklists.",,978-1-4577-0531-1,978-0-7695-4423-6,10.1109/SAINT.2011.11,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6004128,blacklist;drive-by-download;web-based malware,Browsers;Focusing;Internet;Malware;Monitoring;Search engines;Servers,Internet;Web sites;invasive software;search engines,Web-based malware;blacklist URL generation method;click-download infection;drive-by-download infection;malicious URL;malicious Web sites;search engine;structural neighborhood searching,,2,1,25,,,18-21 July 2011,,IEEE,IEEE Conference Publications
NetSecu: A Collaborative Network Security Platform for In-network Security,"Xinming Chen; Beipeng Mu; Chen, Zhen","Dept. of Autom., Tsinghua Univ., Beijing, China","Communications and Mobile Computing (CMC), 2011 Third International Conference on",20110627,2011,,,59,64,"Malicious attacks are frequently launched to make specified network service unavailable, compromising end hosts for political or business purpose. Though network security appliances are widely deployed to resist these attacks, there is a lack of dynamic and collaborative platform to flexibly configure and manage all the security elements. In this paper, we present NetSecu, a platform based on Java and Click Router, which can dynamically enable, disable and configure security elements such as firewall, IPS and AV. Furthermore, a collaborate module is implemented to integrate individual NetSecu platform into a Secure Overlay Network, providing collaborative traffic control against DDoS attack. Equipped with collaborate module, NetSecu platforms are organized in a tree hierarchy where each level node is registered to its father node. A Central Management Site acts as the root node for large scale deployment. The policy is distributed from higher level to lower level NetSecu nodes, while security events are aggregated from lower level to higher level. Performance evaluation shows that our NetSecu system can achieve line rate with and without security function. Finally we deploy the NetSecu platform in multiple sites, where our design is fully demonstrated and tested.",,978-1-61284-312-4,,10.1109/CMC.2011.94,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5931125,Java;click router;collaborative security;network security;overlay network,Collaboration;Hardware;IP networks;Java;Linux;Probes;Security,Java;computer network security;groupware,DDoS attack;Java;NetSecu;central management site;click router;collaborative network security platform;collaborative traffic control;in-network security;malicious attacks;network security appliances;overlay network security,,4,,10,,,18-20 April 2011,,IEEE,IEEE Conference Publications
A Survey on Security for Mobile Devices,"La Polla, M.; Martinelli, F.; Sgandurra, D.","Ist. di Inf. e Telematica, Consiglio Naz. delle Ric., Pisa, Italy","Communications Surveys & Tutorials, IEEE",20130205,2013,15,1,446,471,"Nowadays, mobile devices are an important part of our everyday lives since they enable us to access a large variety of ubiquitous services. In recent years, the availability of these ubiquitous and mobile services has significantly increased due to the different form of connectivity provided by mobile devices, such as GSM, GPRS, Bluetooth and Wi-Fi. In the same trend, the number and typologies of vulnerabilities exploiting these services and communication channels have increased as well. Therefore, smartphones may now represent an ideal target for malware writers. As the number of vulnerabilities and, hence, of attacks increase, there has been a corresponding rise of security solutions proposed by researchers. Due to the fact that this research field is immature and still unexplored in depth, with this paper we aim to provide a structured and comprehensive overview of the research on security solutions for mobile devices. This paper surveys the state of the art on threats, vulnerabilities and security solutions over the period 2004-2011, by focusing on high-level attacks, such those to user applications. We group existing approaches aimed at protecting mobile devices against these classes of attacks into different categories, based upon the detection principles, architectures, collected data and operating systems, especially focusing on IDS-based models and tools. With this categorization we aim to provide an easy and concise view of the underlying model adopted by each approach.",1553-877X,,,10.1109/SURV.2012.013012.00028,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6170530,Intrusion Detection;Mobile Malware;Mobile Security;Trusted Mobile,Bluetooth;Malware;Mobile communication;Network security;Smart phones;Trojan horses,invasive software;smart phones;telecommunication channels;telecommunication security;ubiquitous computing,IDS-based models;communication channels;malware writers;mobile devices;mobile services;security;smart phones;ubiquitous services,,20,,165,,3/15/2012,First Quarter 2013,,IEEE,IEEE Journals & Magazines
Google Android: A Comprehensive Security Assessment,"Shabtai, A.; Fledel, Y.; Kanonov, U.; Elovici, Y.; Dolev, S.; Glezer, C.","Ben-Gurion Univ. of the Negev, Beer-Sheva, Israel","Security & Privacy, IEEE",20100329,2010,8,2,35,44,This research provides a security assessment of the Android framework-Google's software stack for mobile devices. The authors identify high-risk threats to the framework and suggest several security solutions for mitigating them.,1540-7993,,,10.1109/MSP.2010.2,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5396322,Android;Google;mobile devices;risk analysis;security;security solutions for mobile devices,,mobile handsets;operating systems (computers);security of data,Google Android;Google software stack;high-risk threat identification;security assessment,,62,4,10,,1/22/2010,March-April 2010,,IEEE,IEEE Journals & Magazines
It's All in the Cloud: Reviewing Cloud Security,"Pitropakis, N.; Darra, E.; Vrakas, N.; Lambrinoudakis, C.","Dept. of Digital Syst., Univ. of Piraeus, Piraeus, Greece","Ubiquitous Intelligence and Computing, 2013 IEEE 10th International Conference on and 10th International Conference on Autonomic and Trusted Computing (UIC/ATC)",20140130,2013,,,355,362,"Cloud computing is gradually replacing traditional IT infrastructures. However, an important issue that has emerged through that revolution is the preservation of an adequate level of security for the infrastructure. Currently there are many researchers working in the area of cloud security and privacy protection, proposing several solutions that address the threats against cloud infrastructures. This paper provides a thorough review of the research work in the area presenting the solutions that have been proposed so far.",,978-1-4799-2481-3,,10.1109/UIC-ATC.2013.13,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6726230,Cloud Computing;Privacy Protection;Security,Browsers;Cloud computing;Computer crime;Hardware;Monitoring,cloud computing;data privacy;security of data,IT infrastructures;cloud computing;cloud infrastructures;cloud security;infrastructure security;privacy protection,,0,,47,,,18-21 Dec. 2013,,IEEE,IEEE Conference Publications
Obfuscation: The Hidden Malware,"O'Kane, P.; Sezer, S.; McLaughlin, K.","Centre for Secure Inf. Technol., Queen's Univ. Belfast, Belfast, UK","Security & Privacy, IEEE",20110926,2011,9,5,41,47,"A cyberwar exists between malware writers and antimalware researchers. At this war's heart rages a weapons race that originated in the 80s with the first computer virus. Obfuscation is one of the latest strategies to camouflage the telltale signs of malware, undermine antimalware software, and thwart malware analysis. Malware writers use packers, polymorphic techniques, and metamorphic techniques to evade intrusion detection systems. The need exists for new antimalware approaches that focus on what malware is doing rather than how it's doing it.",1540-7993,,,10.1109/MSP.2011.98,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5975134,computer security;malware;metamorphism;obfuscation;packer;polymorphism,Computer security;Databases;Handwriting recognition;Malware;System-on-a-chip,computer viruses,Cyberwar;Obfuscation malware;antimalware software;computer virus;intrusion detection system;malware writer;metamorphic technique;polymorphic technique;thwart malware analysis,,8,,16,,8/4/2011,Sept.-Oct. 2011,,IEEE,IEEE Journals & Magazines
