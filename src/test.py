import unittest
import main

class maintests(unittest.TestCase):

	def test_smoke(self):
		pass


	def test_parseCSVLine(self):
		# Insane number of names and extremely long row
		# Taken from real IEEE example
		headerNames = ['Key', 'Item Type', 'Publication Year', 'Author', 'Title', 'Publication Title', 'ISBN', 'ISSN', 'DOI', 'Url', 'Abstract Note', 'Date', 'Date Added', 'Date Modified', 'Access Date', 'Pages', 'Num Pages', 'Issue', 'Volume', 'Number Of Volumes', 'Journal Abbreviation', 'Short Title', 'Series', 'Series Number', 'Series Text', 'Series Title', 'Publisher', 'Place', 'Language', 'Rights', 'Type', 'Archive', 'Archive Location', 'Library Catalog', 'Call Number', 'Extra', 'Notes', 'File Attachments', 'Link Attachments', 'Manual Tags', 'Automatic Tags', 'Editor', 'Series Editor', 'Translator', 'Contributor', 'Attorney Agent', 'Book Author', 'Cast Member', 'Commenter', 'Composer', 'Cosponsor', 'Counsel', 'Interviewer', 'Producer', 'Recipient', 'Reviewed Author', 'Scriptwriter', 'Words By', 'Guest', 'Number', 'Edition', 'Running Time', 'Scale', 'Medium', 'Artwork Size', 'Filing Date', 'Application Number', 'Assignee', 'Issuing Authority', 'Country', 'Meeting Name', 'Conference Name', 'Court', 'References', 'Reporter', 'Legal Status', 'Priority Numbers', 'Programming Language', 'Version', 'System', 'Code', 'Code Number', 'Section', 'Session', 'Committee', 'History', 'Legislative Body']
		row1 = "Auditing cloud computing migration,\"Mateescu, G.; Vladescu, M.; Sgarciu, V.\",\"Dept. of Autom. & Comput. Sci., Univ. Polyteh.\"\" of Bucharest\", Bucharest,\" Romania\"\"\",\"Applied Computational Intelligence and Informatics (SACI), 2014 IEEE 9th International Symposium on\",20140619,2014,,,263,268,\"This paper presents a tool used to audit the cloud adoption within a company. The first section states the main advantages of the cloud computing environment together with its biggest challenges that can introduce significant risks within a company. In order to assess properly the cloud computing adoption, we developed a web based tool that assists the internal auditor in the pre-migration process. Section II describes in details the Migration Assessment Tool (MAT). Starting with its architecture, we presented the main objects manipulated by our application in order to implement a cloud adoption assessment. In order to compute the impact, we classified the questions in different domains and we defined the dependencies between the questions. At the end of section II, we presented the process implemented in MAT when assessing a cloud migration. The paper ends with conclusions that state the main benefits of our approach and future improvements for MAT.\",,,,10.1109/SACI.2014.6840073,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6840073,,Best practices;Cloud computing;Companies;Computational modeling;Computer architecture,auditing;business data processing;cloud computing,MAT;Web based tool;cloud adoption assessment;cloud computing migration auditing;company;internal auditor;migration assessment tool;premigration process,,0,,8,,,15-17 May 2014,,IEEE,IEEE Conference Publications,"
		row2 = "Toward Efficient Detection of Semantic Exceptions in Context-Aware Systems,\"Eun-Sun Cho; Helal, S.\",\"Dept. of Comput. Sci. &amp; Eng., Chungnam Nat. Univ., Daejeon, South Korea\",\"Ubiquitous Intelligence & Computing and 9th International Conference on Autonomic & Trusted Computing (UIC/ATC), 2012 9th International Conference on\",20121018,2012,,,826,831,\"Semantic exceptions mean undesirable contexts with respect to application semantics in context aware systems. Description of such semantic exceptions is based on regular expressions, which entails high complexity to detect exceptions. In this paper we devise a high level language with light-weight exception description features specific to context-aware systems. For more enhanced implementation, we also provide an intermediate language to bridge the gap between high level programming languages and event stream processing engines. We expect this approach to mitigate the complexity as well as to allow further opportunities to optimize exception detection process.\",,978-1-4673-3084-8,,10.1109/UIC-ATC.2012.138,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6332091,complex event processing;context-aware systems;exception handling;exceptions;safety,Automata;Context;Engines;High level languages;Pattern matching;Semantics;Sensors,discrete event simulation;exception handling;optimisation;ubiquitous computing,context aware system;event stream processing engine;intermediate language;lightweight exception description feature;optimization;programming language;semantic exception detection,,3,,17,,,4-7 Sept. 2012,,IEEE,IEEE Conference Publications,,,"
		
		entry = main.parseCSVLine(row2, headerNames)