http://ieeexplore.ieee.org/search/searchresult.jsp?download-format=download-csv&bulkSetSize=2000&refinements%3D4291944822%2C4291944246%26ranges%3D2009_2016_p_Publication_Year%26matchBoolean%3Dtrue%26searchField%3DSearch_All_Text%26queryText%3D%28%28%28%28%28.QT.Scanning+Time.QT.%29+OR+.QT.time+spent+scanning.QT.%29+OR+.QT.time+spent+pattern+matching.QT.%29+OR+.QT.pattern+matching+time.QT.%29+AND+.QT.Intrusion+Detection+System.QT.%29,11/9/2015 20:36,"(((((""Scanning Time"") OR ""time spent scanning"") OR ""time spent pattern matching"") OR ""pattern matching time"") AND ""Intrusion Detection System"")",IEEE,,,,,,,,,,,,,,,,,,,,,,,,,,
Document Title,Authors,Author Affiliations,Publication Title,Date Added To Xplore,Year,Volume,Issue,Start Page,End Page,Abstract,ISSN,ISBN,EISBN,DOI,PDF Link,Author Keywords,IEEE Terms,INSPEC Controlled Terms,INSPEC Non-Controlled Terms,MeSH Terms,Article Citation Count,Patent Citation Count,Reference Count,Copyright Year,Online Date,Issue Date,Meeting Date,Publisher,Document Identifier
A memory efficient FPGA-based pattern matching engine for stateful NIDS,Tran Trung Hieu; Ngoc Thinh Tran,"Fac. of Comput. Sci. & Eng., HCMC Univ. of Technol., Ho Chi Minh City, Vietnam","Ubiquitous and Future Networks (ICUFN), 2013 Fifth International Conference on",20130930,2013,,,252,257,"Pattern matching task plays an important role in network security applications especially Network Intrusion Detection System (NIDS). The limitation of matching throughput on general purpose processor gives rise to implementation of the task on FPGA. In this paper, we introduce a memory efficient FPGA-based pattern matching engine. We bases on Deterministic Finite Automata (DFA) and propose some modifications to reduce redundant logic. The proposed design, with better memory utilization, is capable of dynamic update and compatible to stateful NIDS. The analysis of memory efficiency and the hardware implementation of proposed design are also provided in this paper. We experiment our approach on contemporary NIDS pattern sets and build a prototype to test on real network environment. The results show that our design could save up to 90% hardware resources compare to traditional approach. The matching engine is compatible to gigabit network and could achieve 2.7-3.2x speed up to software-based matching engine.",2165-8528,,,10.1109/ICUFN.2013.6614821,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6614821,DFA;FPGA;FSM;NIDS;pattern matching,Engines;Field programmable gate arrays;Indexes,deterministic automata;field programmable gate arrays;finite state machines;pattern matching;security of data,DFA;FPGA-based pattern matching engine;NIDS;deterministic finite automata;general purpose processor;gigabit network;hardware implementation;memory efficiency;network intrusion detection system;network security applications;redundant logic,,1,,14,,,2-5 July 2013,,IEEE,IEEE Conference Publications
A Bray-Curtis Weighted Automaton for Detecting Malicious Code Through System-Call Analysis,"Pungila, C.","Comput. Sci. Dept., West Univ. of Timisoara, Timisoara, Romania","Symbolic and Numeric Algorithms for Scientific Computing (SYNASC), 2009 11th International Symposium on",20100506,2009,,,392,400,"Malicious code detection is one of the top subjects of interest for intrusion detection systems in today's computer security research areas. In this paper we propose a new heuristic method for detecting malicious code through system call matching, which also takes in consideration the time of the system call, by using an adaptive search for an extended Aho-Corasick automaton supporting a subset of the regular expressions language, through the use of a normalization technique known as the Bray-Curtis (Sorensen) distance. We will also discuss how this technique can be applied to enrich the set of existing rules from the knowledge base for improving the detection rate.",,978-1-4244-5910-0,978-1-4244-5911-7,10.1109/SYNASC.2009.41,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5460823,Aho-Corasick automata;Bray-Curtis distance;Sorensen distance;dynamic analysis;intrusion detection system;malicious code detection;normalization;static analysis;system call timing,Algorithm design and analysis;Automata;Computer science;Informatics;Intrusion detection;Mathematics;Pattern analysis;Performance analysis;Scientific computing;Viruses (medical),automata theory;formal languages;security of data,Aho-Corasick automaton;Bray-Curtis distance;Bray-Curtis weighted automaton;Sorensen distance;computer security;detection rate;intrusion detection;knowledge base;malicious code detection;normalization technique;regular expression language;system call matching;system call time;system-call analysis,,1,,23,,,26-29 Sept. 2009,,IEEE,IEEE Conference Publications
Performance Analysis of the Single Pattern Matching Algorithm Based on Prefix Searching,Wu Xi-hong,"Sch. of Comput. Sci., Jiaying Univ., Meizhou, China","Computational Intelligence and Security (CIS), 2011 Seventh International Conference on",20120112,2011,,,1024,1027,"Intrusion Detection System has become the important part of the computer and network security because it can effectively compensate for the lack of network security measures. However, the intrusion detection technology relies heavily on pattern matching algorithms, as the choice of pattern matching algorithms directly affect the detection rate, so it is more important. First the paper is detailed analysis the characteristics of the four kinds of single pattern matching which based on prefix search, and then it tests by the number of different pattern strings. The experimental results show that the KMP algorithm can improve effectively the speed of pattern matching. So the application of KMP algorithm can improve the efficiency of intrusion detection.",,978-1-4577-2008-6,,10.1109/CIS.2011.228,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6128279,KMP algorithm;network security;prefix searching;single pattern matching algorithm,Algorithm design and analysis;Arrays;Classification algorithms;Complexity theory;Intrusion detection;Pattern matching,computer network security;information retrieval;string matching,IDS;KMP algorithm;computer security;intrusion detection system;network security;pattern strings;performance analysis;prefix searching;single pattern matching algorithm,,0,,8,,,3-4 Dec. 2011,,IEEE,IEEE Conference Publications
Research on anomaly behavior blocking method for desktop security,Wang Jing; Sun Chao-Yi; Feng Li; Zhou Ti,"Wuhan Digital Eng. Inst., Wuhan, China","Computer Application and System Modeling (ICCASM), 2010 International Conference on",20101104,2010,4,,V4-67,V4-71,"Anti-virus software is a most common method for protecting the security of Desktop operating system. However, they fall prey to a number of shortcomings such as fully depend on and need to update the virus-database frequently, long scanning time, and their inability to prevent the unknown attacks. Aiming at these, in this paper we propose a novel anomaly behavior blocking approach based on the process behavior reflected in operating system kernel, and introduce an adaptive sliding window to trace the whole process behavior sequence dynamically, two security indices, Normal-Density and Abnormal-Density are also put forward to evaluate the security status of process. By introducing them into the Network Entropy theory, we can make certain the blocking occasion and the blocking granularity accurately. Compared to the traditional blocking models based on fixed window, the experimental results show that this approach can block malicious behavior more effectively as well as drastically.",,978-1-4244-7235-2,978-1-4244-7237-6,10.1109/ICCASM.2010.5620464,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5620464,Abnormal-Density;Normal-Density;behavior blocking;desktop security;network theory;sliding window,Manganese;Tin,computer viruses;operating systems (computers),adaptive sliding window;anomaly behavior blocking method;antivirus software;desktop operating system security;network entropy theory;operating system kernel;scanning time;virus database update,,0,,12,,,22-24 Oct. 2010,,IEEE,IEEE Conference Publications
BLAST: B-LAyered bad-character SHIFT tables for high-speed pattern matching,Yoon-Ho Choi; Seung-Woo Seo,"Dept. of Convergence Security, Kyonggi Univ., Suwon, South Korea","Information Security, IET",20130902,2013,7,3,195,202,"In this study, the authors propose a new multi-pattern matching algorithm, called BLAST (B-LAyered bad-character Shift Tables with a single-byte search unit), which considers space-time tradeoff in the context of shift values during the search. Here, the term `bad character' is a character that causes a mismatch. While checking multiple bytes in scanning the text at a time, the BLAST algorithm overcomes the reduction of the average shift value in a typical search, which is caused by the dependency on the multi-byte search unit (MBSU) and the large frequency of the last character of the given patterns. From the theoretical analysis, the authors validate the correctness of the BLAST algorithm. Also, from the experimental results across different setups, the authors show that the BLAST algorithm provides the faster search time than the other algorithms. For example, the authors obtain an enhancement by as much as 212.41% on average for various numbers of attack patterns and attack traffic conditions compared with that of the modified Wu-Manber algorithm. In addition, it is shown that the BLAST algorithm drastically reduces the amount of memory required for constructing the shift table based on a MBSU from 64 KB to 1 KB.",1751-8709,,,10.1049/iet-ifs.2011.0305,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6587875,,,computer network security;search problems;string matching;text analysis,B-layered bad-character SHIFT tables;BLAST algorithm;MBSU;Wu-Manber algorithm;attack patterns;attack traffic conditions;byte checking;high-speed pattern matching;multibyte search unit;multipattern matching algorithm;pattern search time;shift values;single bad-character SHIFT table;single-byte search unit;space-time tradeoff;text scanning,,0,,,,,Sept. 2013,,IET,IET Journals & Magazines
Book of abstracts,,,"Computer Science & Education (ICCSE), 2013 8th International Conference on",20130715,2013,,,35,74,Presents abstracts for the articles comprising the conference proceedings.,,978-1-4673-4464-7,,10.1109/ICCSE.2013.6554177,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6554177,,,,,,0,,,,,26-28 April 2013,,IEEE,IEEE Conference Publications
Research and improvement of MWM multi-mode matching algorithm,Zhou Yan-sen; Kang Yan-mei,"Dept. of Inf. Sci. & Technol., Univ. of Int. Relations, Beijing, China","Computer Science and Network Technology (ICCSNT), 2012 2nd International Conference on",20130610,2012,,,443,447,"Multi-mode matching algorithm is the key to the intrusion detection's performance. The paper analyzes WM algorithm, and shows the main disadvantages of MWM algorithm. Against these defects, we come up with an improved algorithm-IMWM algorithm, which uses repeated hash to solve string prefix conflict and reduce the number of match. Considering matching windows' subsequent characters moving distance when the match failed, IMWM algorithm expands matching windows' moving distance. With the same text string and pattern string, IMWM algorithm has promising improvements in matching performance comparing with MWM algorithm, which has been proved by experiments.",,978-1-4673-2963-7,,10.1109/ICCSNT.2012.6525973,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6525973,hash conflict;hash table;matching window;multi-mode matching;shortest pattern string,,cryptography;string matching;text analysis,IMWM algorithm;MWM multimode matching algorithm;intrusion detection performance;match number reduction;matching performance improvements;matching window moving distance;pattern string;repeated hash;string prefix conflict;text string,,0,,10,,,29-31 Dec. 2012,,IEEE,IEEE Conference Publications
Detecting backdoor using stepping stone detection approach,"Alminshid, K.; Omar, M.N.","Dept. of Inf. Technol., Univ. Utara Malaysia, Sintok, Malaysia","Informatics and Applications (ICIA),2013 Second International Conference on",20131031,2013,,,87,92,"Several techniques are used by intruders to hide the track of intrusion in the network. One of these techniques executes by using series of hosts in network (stepping stones chain), which can be detected by using an approach, called Stepping Stone Detection (SSD). However, during all previous years, SSD was only confined to detect this type of intrusion. This paper discusses the using of SSD approach and potential applications in other emerging field by introduce the using of SSD concepts in backdoor attack detection field. This research shows that by using SSD to detect backdoor attack can be gained very low false negative and false positive rates and reduces the scan process time detection.",,978-1-4673-5255-0,,10.1109/ICoIA.2013.6650235,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6650235,RTT;Stepping stone;backdoor;stepping stone detection,Internet;Intrusion detection;Malware;Monitoring;Ports (Computers);Software,computer network security,SSD approach;backdoor attack detection field;false negative rates;false positive rates;network intrusion tracking;scan process time detection;stepping stone detection approach,,0,,23,,,23-25 Sept. 2013,,IEEE,IEEE Conference Publications
An independently partial pattern matching for content inspection at multi gigabit networks,Woo-Sug Jung; Taeck-Geun Kwon,"Electron. & Telecommun. Res. Inst., Daejeon, South Korea","Advanced Communication Technology (ICACT), 2010 The 12th International Conference on",20100401,2010,2,,1574,1579,"In this paper, we propose a novel algorithm for pattern matching at multi gigabit network. It is called as the IPM. Our proposed algorithm can minimize the system overhead which is generated to extract patterns at out-of-sequence packets since the IPM does not require a buffering, reordering and reassembling to keep sequence of packets. Our proposed algorithm performs independently partial pattern matching to extract the pattern from incoming multiple packets at multi gigabit network. The IPM is implemented by FPGA, TCAM and SRAM. Consequently, we show the IPM can reduce 87% of TCAM entries to extract 17 bytes pattern and w = 4. Moreover, we observed that IPM can perform the scanning of packets at 10.941Gbps and it spent 5.79LC/Char to implement the IPM. Then, we achieved the 1.89 Gbps/LC of PHC score. This means that IPM provides the optimal performance in contrast with hardware complexity. Therefore, we propose the cost-effective algorithm to extract the pattern at multi gigabit network.",1738-9445,978-1-4244-5427-3,,,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5440330,FPGA;IPM;Out-Of-Sequence packet;Pattern Matching;TCAM,Data mining;Field programmable gate arrays;Hardware;IP networks;Inspection;Intrusion detection;Pattern matching;Random access memory;Telecommunication traffic;Web and internet services,SRAM chips;field programmable gate arrays;pattern matching,FPGA;IPM;SRAM;TCAM;cost-effective algorithm;hardware complexity;multi gigabit networks;optimal performance;out-of- sequence packets;partial pattern matching,,0,,21,,,7-10 Feb. 2010,,IEEE,IEEE Conference Publications
Speculative Parallel Pattern Matching,"Luchaup, D.; Smith, R.; Estan, C.; Jha, S.","Dept. of Comput. Sci., Univ. of Wisconsin at Madison, Madison, WI, USA","Information Forensics and Security, IEEE Transactions on",20110516,2011,6,2,438,451,"Intrusion prevention systems (IPSs) determine whether incoming traffic matches a database of signatures, where each signature is a regular expression and represents an attack or a vulnerability. IPSs need to keep up with ever-increasing line speeds, which has lead to the use of custom hardware. A major bottleneck that IPSs face is that they scan incoming packets one byte at a time, which limits their throughput and latency. In this paper, we present a method to search for arbitrary regular expressions by scanning multiple bytes in parallel using speculation. We break the packet in several chunks, opportunistically scan them in parallel, and if the speculation is wrong, correct it later. We present algorithms that apply speculation in single-threaded software running on commodity processors as well as algorithms for parallel hardware. Experimental results show that speculation leads to improvements in latency and throughput in both cases.",1556-6013,,,10.1109/TIFS.2011.2112647,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5710582,Low latency;multibyte;multibyte matching;parallel pattern matching;parallel regular expression matching;regular expressions;speculative pattern matching,Couplings;Doped fiber amplifiers;Hardware;History;Pattern matching;Software algorithms;Throughput,database management systems;pattern matching;security of data,IPS;intrusion prevention systems;parallel hardware;speculative parallel pattern matching,,5,,33,,2/10/2011,Jun-11,,IEEE,IEEE Journals & Magazines
GPU-to-GPU and Host-to-Host Multipattern String Matching on a GPU,"Xinyan Zha; Sahni, S.","Comput. & Inf. Sci. & Eng, Univ. of Florida, Gainesville, FL, USA","Computers, IEEE Transactions on",20130429,2013,62,6,1156,1169,"We develop GPU adaptations of the Aho-Corasick and multipattern Boyer-Moore string matching algorithms for the two cases GPU-to-GPU (input to the algorithms is initially in GPU memory and the output is left in GPU memory) and host-to-host (input and output are in the memory of the host CPU). For the GPU-to-GPU case, we consider several refinements to a base GPU implementation and measure the performance gain from each refinement. For the host-to-host case, we analyze two strategies to communicate between the host and the GPU and show that one is optimal with respect to runtime while the other requires less device memory. This analysis is done for GPUs with one I/O channel to the host as well as those with 2. Experiments conducted on an NVIDIA Tesla GT200 GPU that has 240 cores running off of a Xeon 2.8 GHz quad-core host CPU show that, for the GPU-to-GPU case, our Aho-Corasick GPU adaptation achieves a speedup between 8.5 and 9.5 relative to a single-thread CPU implementation and between 2.4 and 3.2 relative to the best multithreaded implementation. For the host-to-host case, the GPU AC code achieves a speedup of 3.1 relative to a single-threaded CPU implementation. However, the GPU is unable to deliver any speedup relative to the best multithreaded code running on the quad-core host. In fact, the measured speedups for the latter case ranged between 0.74 and 0.83. Early versions of our multipattern Boyer-Moore adaptations ran 7 to 10 percent slower than corresponding versions of the AC adaptations and we did not refine the multipattern Boyer-Moore codes further.",0018-9340,,,10.1109/TC.2012.61,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6165263,Aho-Corasick;CUDA;GPU;Multipattern string matching;multipattern Boyer-Moore,Arrays;Bandwidth;Dictionaries;Doped fiber amplifiers;Graphics processing unit;Instruction sets;Pattern matching,graphics processing units;multi-threading;pattern matching,Boyer-Moore adaptations;GPU AC code;GPU adaptations;GPU memory;GPU-to-GPU;I/O channel;NVIDIA Tesla GT200 GPU;device memory;host-to-host multipattern string matching;multipattern Boyer-Moore string matching algorithms;multithreaded implementation,,4,,39,,3/6/2012,Jun-13,,IEEE,IEEE Journals & Magazines
Accelerating Multipattern Matching on Compressed HTTP Traffic,"Bremler-Barr, A.; Koral, Y.","Interdiscipl. Center, Efi Arazi Sch. of Comput. Sci., Herzlia, Israel","Networking, IEEE/ACM Transactions on",20120612,2012,20,3,970,983,"Current security tools, using “signature-based” detection, do not handle compressed traffic, whose market-share is constantly increasing. This paper focuses on compressed HTTP traffic. HTTP uses GZIP compression and requires some kind of decompression phase before performing a string matching. We present a novel algorithm, Aho-Corasick-based algorithm for Compressed HTTP (ACCH), that takes advantage of information gathered by the decompression phase in order to accelerate the commonly used Aho-Corasick pattern-matching algorithm. By analyzing real HTTP traffic and real Web application firewall signatures, we show that up to 84% of the data can be skipped in its scan. Surprisingly, we show that it is faster to perform pattern matching on the compressed data, with the penalty of decompression, than on regular traffic. As far as we know, we are the first paper that analyzes the problem of “on-the-fly” multipattern matching on compressed HTTP traffic and suggest a solution.",1063-6692,,,10.1109/TNET.2011.2172456,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6062397,Compressed HTTP;computer security;intrusion detection;pattern matching,Acceleration;Browsers;Dictionaries;Doped fiber amplifiers;Memory management;Pattern matching;Security,Internet;authorisation;computer network security;data compression;hypermedia;string matching;telecommunication traffic;transport protocols,ACCH;Aho-Corasick-based algorithm for Compressed HTTP;GZIP compression;compressed HTTP traffic;data compression;decompression phase;market-share;multipattern matching acceleration;pattern matching;real Web application firewall signatures;security tools;signature-based detection;string matching,,3,,34,,10/27/2011,Jun-12,,IEEE,IEEE Journals & Magazines
Multipattern string matching on a GPU,"Xinyan Zha; Sahni, S.","Comput. & Inf. Sci. & Eng., Univ. of Florida, Gainesville, FL, USA","Computers and Communications (ISCC), 2011 IEEE Symposium on",20110818,2011,,,277,282,We develop GPU adaptations of the Aho-Corasick string matching algorithm for the the case when all data reside initially in the GPU memory and the results are to be left in this memory. We consider several refinements to a base GPU implementation and measure the performance gain from each refinement. Experiments conducted on an NVIDIA Tesla GT200 GPU that has 240 cores running off of a Xeon 2.8GHz quad-core host CPU show that our Aho-Corasick GPU adaptation achieves a speedup between 8.5 and 9.5 relative to a single-thread CPU implementation and between 2.4 and 3.2 relative to the best multithreaded implementation.,1530-1346,978-1-4577-0680-6,978-1-4577-0678-3,10.1109/ISCC.2011.5983790,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5983790,Aho-Corasick;CUDA;GPU;Multipattern string matching,Arrays;Bandwidth;Doped fiber amplifiers;Graphics processing unit;Instruction sets;Memory management;Registers,computer graphic equipment;coprocessors;multi-threading;multiprocessing systems;string matching,Aho-Corasick string matching algorithm;GPU memory;NVIDIA Tesla GT200 GPU;Xeon 2.8GHz quad core host CPU;multipattern string matching;multithreaded implementation;single thread CPU implementation,,5,,17,,,June 28 2011-July 1 2011,,IEEE,IEEE Conference Publications
Deep packet inspection with DFA-trees and parametrized language overapproximation,"Luchaup, D.; De Carli, L.; Jha, S.; Bach, E.","U. of Wisconsin-Madison, Madison, WI, USA","INFOCOM, 2014 Proceedings IEEE",20140708,2014,,,531,539,"IPSs determine whether incoming traffic matches a database of vulnerability signatures defined as regular expressions. DFA representations are popular, but suffer from the state-explosion problem. We introduce a new matching structure: a tree of DFAs where the DFA associated with a node over-approximates those at its children, and the DFAs at the leaves represent the signature set. Matching works top-down, starting at the root of the tree and stopping at the first node whose DFA does not match. In the common case (benign traffic) matching does not reach the leaves. DFA-trees are built using Compact Overapproximate DFAs (CODFAs). A CODFA D' for D over-approximates the language accepted by D, has a smaller number of states than D, and has a low false-match rate. Although built from approximate DFAs, DFA-trees perform exact matching faster than a commonly used method, have a low memory overhead and a guaranteed good worst case performance.",,,,10.1109/INFOCOM.2014.6847977,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6847977,,Approximation error;Automata;Computers;Conferences;DH-HEMTs;Payloads;Training,computational complexity;deterministic automata;digital signatures;finite automata;formal languages;pattern matching;tree data structures,CODFAs;DFA-trees;IPSs;NP-hard problem;benign traffic matching;compact overapproximate DFAs;deep packet inspection;deterministic finite automata;intrusion prevention system;low false-match rate;low memory overhead;matching structure;parametrized language overapproximation;regular expressions;state-explosion problem;vulnerability signatures,,1,,30,,,April 27 2014-May 2 2014,,IEEE,IEEE Conference Publications
Dynamic Multiple Pattern Detection Algorithm,"Khancome, C.; Boonjing, V.","Dept. of Math. & Comput. Sci., King Monkut''s Inst. of Technol. at Ladkrabang(KMITL), Bangkok, Thailand","Computer and Network Technology (ICCNT), 2010 Second International Conference on",20100601,2010,,,48,52,"The multiple pattern matching has always been a significant principle for applying to a network security system. This principle is adapted to accommodate the target patterns to be detected in a pre-processing phase, and the objective text and the suspect patterns are simultaneously detected by comparing with the existing structure. This research article introduces a new algorithm of multi-string pattern matching by means of a new data structure called inverted lists. The inverted lists structure, inherited from the inverted index, is represented by the positions of characters which appear in the patterns. The new algorithm, which is more efficient time than the traditional algorithms, scans the given text in a single pass. More importantly, the structure of patterns is able to update the patterns over time.",,978-0-7695-4042-9,978-1-4244-6962-8,10.1109/ICCNT.2010.90,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5474537,Inverted Index;Inverted Lists;Multiple Pattern;Static Dictionary Matching;String Matching,Computer science;Data structures;Detection algorithms;Intrusion detection;Laboratories;Mathematics;Pattern matching;Phase detection;Software systems;Systems engineering and theory,data structures;pattern matching,dynamic multiple pattern detection algorithm;inverted index;inverted lists;multi-string pattern matching;network security system,,0,,26,,,23-25 April 2010,,IEEE,IEEE Conference Publications
Performance Evaluation of Multi-pattern Matching Algorithms on Smartphone,"Amamra, A.; Talhi, C.; Robert, J.","Dept. of Software Eng. &amp; Inf. Technol., Ecole de Technol. Super., Montreal, QC, Canada","Broadband, Wireless Computing, Communication and Applications (BWCCA), 2012 Seventh International Conference on",20130121,2012,,,329,334,"Dramatic increase of smartphones malwares has imposed adopting malware detection solution for them. Signature-based technique is widely used in commercial Antivirus and it is based on multi-pattern matching algorithms. In this paper, we discuss several multi-pattern matching algorithms and review their complexities. We implement and evaluate their performance on limited resources environment, which is Android Smartphone. We study Android memory management and identify the available memory. We compare the available memory with required by each algorithm. We classify algorithms according to their memory budgets.",,978-1-4673-2972-9,,10.1109/BWCCA.2012.61,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6363077,Malware Detection;Pattern Matching;Signature-based technique;Smartphone;Smartphone Memory,Algorithm design and analysis;Classification algorithms;Malware;Memory management;Pattern matching;Random access memory;Smart phones,Linux;digital signatures;invasive software;pattern matching;performance evaluation;resource allocation;smart phones;storage management,Android memory management;Android smartphone;available memory identification;commercial antivirus;limited resource environment;malware detection solution;multipattern matching algorithms;performance evaluation;signature-based technique;smartphone malwares,,0,,25,,,12-14 Nov. 2012,,IEEE,IEEE Conference Publications
BMEI 2009 List of Papers,,,"Biomedical Engineering and Informatics, 2009. BMEI '09. 2nd International Conference on",20091030,2009,,,i,xxxix,Presents the table of contents of the proceedings.,,978-1-4244-4132-7,,10.1109/BMEI.2009.5305874,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5305874,,,,,,0,,,,,17-19 Oct. 2009,,IEEE,IEEE Conference Publications
A Payload driven Security model for flooding attacks in Active networks,"Jayashree, P.; Easwarakumar, K.S.; Radhakrishnan, D.; Lakshmanan, N.; Dinakaran, P.","Dept. of Inf. Technol., Anna Univ., Chennai","Advance Computing Conference, 2009. IACC 2009. IEEE International",20090331,2009,,,934,939,"In today's fast growing Internet world, the number of distributed denial of service attacks (DDoS) is increasing at an alarming rate. Evading these attacks has created a lot of attention from researchers. A number of monitoring and filtering devices have been developed to verify the authenticity of the packets based on the packet payload data in intrusion detection systems (IDS). However, the methods used for IDS cannot be deployed in DDoS filters since in DDoS attacks, a lot of packets arrive in a short span of time and deriving packet payload patterns become cumbersome with these IDS algorithms. This paper presents a three-level mechanism to distinguish attack packets from legitimate ones by scanning the payload of the packet. Packet patterns are derived by using the eigen vector concept and the obtained patterns are compared using an optimal string matching algorithm. This three-level filter was tested in the ANTS active network tool kit with the 1999 DARPA IDS dataset as the back end. Results validate the proposed scheme's efficiency and the time complexity of the filter proposed is smaller than IDS payload scanning methodologies.",,978-1-4244-2927-1,978-1-4244-2928-8,10.1109/IADCC.2009.4809140,http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4809140,ANTS;Anomaly detection;Distributed Denial of Service attack;Eigen Vector;Payload modeling;String matching,Computer crime;Computer networks;Computer security;Detectors;Filtering;Filters;Intrusion detection;Payloads;Telecommunication traffic;Traffic control,Internet;eigenvalues and eigenfunctions;message authentication;string matching;telecommunication security,DDoS attack;Internet;active network;distributed denial-of-service attack;eigen vector;flooding attack;intrusion detection system;optimal string matching algorithm;packet authenticity;packet payload data;payload driven security model,,1,1,11,,,6-7 March 2009,,IEEE,IEEE Conference Publications
